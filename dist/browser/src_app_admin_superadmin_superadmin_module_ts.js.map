{"version":3,"file":"src_app_admin_superadmin_superadmin_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACiF;AAQA;;;;;;;;;;;;;;;;;;ICSjD,4EAAmE;IAAA,iFACvD;IAAA,4DAAY;;;IACxB,4EAAuE;IAAA,gGAC5C;IAAA,4DAAY;;;IAUvC,4EAAkE;IAAA,gFACtD;IAAA,4DAAY;;;IACxB,4EAAsE;IAAA,+FACjD;IAAA,4DAAY;;;IAUjC,4EAAiE;IAAA,4EACrD;IAAA,4DAAY;;;IACxB,4EAAyE;IAAA,iFAEzE;IAAA,4DAAY;;;IACZ,4EAAmE;IAAA,mFAE1D;IAAA,4DAAY;;;IAerB,4EAAkE;IAAA,iFACtD;IAAA,4DAAY;;;IACxB,4EAAgE;IAAA,mFACtD;IAAA,4DAAY;;;IACtB,4EAAsE;IAAA,yFACvD;IAAA,4DAAY;;;IAC3B,4EAAsE;IAAA,yFACvD;IAAA,4DAAY;;;IAW3B,4EAA6D;IAAA,oFACjD;IAAA,4DAAY;;;IAUhB,iFAC0B;IACtB,uEAAM;IAAA,uDAAa;IAAA,4DAAO;IAC9B,4DAAa;;;IAFT,kFAAqB;IACf,0DAAa;IAAb,8EAAa;;;IAH3B,wEAA4C;IACxC,+IAGa;IACjB,qEAAe;;;IAJE,0DAA4C;IAA5C,iHAA4C;;;IAMjE,4EAA+D;IAAA,6EACvD;IAAA,4DAAY;;;IAiBpB,4EAAkE;IAAA,+EACtD;IAAA,4DAAY;;;IACxB,4EAAsE;IAAA,8FACjD;IAAA,4DAAY;;;ADzG1D,MAAM,oBAAoB;IAwB/B,YAAmB,MAAiB,EAAS,UAAsB,EAAS,QAAqB,EAAU,KAAqB,EAAU,MAAc,EAAS,WAAwB,EAAU,QAAkB;QAAlM,WAAM,GAAN,MAAM,CAAW;QAAS,eAAU,GAAV,UAAU,CAAY;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAjB9M,aAAQ,GAAG,EAAE,CAAC;QACd,aAAQ,GAAG,EAAE,CAAC;QACrB,SAAI,GAAG,IAAI,CAAC;QACZ,UAAK,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/C,cAAS,GAAG,KAAK,CAAC;QAElB,eAAU,GAAG,IAAI,qDAAS,CAAC;YACzB,MAAM,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YAC/B,QAAQ,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7E,SAAS,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9E,QAAQ,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7E,OAAO,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,EAAE,8DAAkB,CAAC,iDAAiD,CAAC,CAAC,CAAC;YACnJ,QAAQ,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7E,GAAG,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YAC/C,MAAM,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SACnD,CAAC,CAAC;IAEsN,CAAC;IAE1N,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9B,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,gBAAgB;IACT,aAAa;QAClB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,sBAAsB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACnE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,KAAoB;QAC9B,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE;YACrB,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;IACH,CAAC;IAED,aAAa;IACN,MAAM,CAAC,UAAU;QACtB,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM;QAC9B,IAAI,MAAM,IAAI,EAAE,EAAE;YAChB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SAC7B;aACI;YACH,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SAC7B;IACH,CAAC;IAED,iBAAiB;IACV,UAAU,CAAC,QAAQ;QAExB,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,YAAY,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;QAE3F,IAAI,YAAY,GAAgB;YAC9B,WAAW,EAAE,QAAQ,CAAC,SAAS;YAC/B,UAAU,EAAE,QAAQ,CAAC,QAAQ;YAC7B,SAAS,EAAE,QAAQ,CAAC,OAAO;YAC3B,UAAU,EAAE,QAAQ,CAAC,QAAQ;YAC7B,KAAK,EAAE,YAAY;YACnB,UAAU,EAAE,QAAQ,CAAC,QAAQ;YAC7B,QAAQ,EAAE,QAAQ,CAAC,MAAM;YACzB,QAAQ,EAAE,CAAC;YACX,OAAO,EAAE,CAAC;YACV,MAAM,EAAE,QAAQ;SACjB;QAED,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACzE,IAAI,IAAI,IAAI,yBAAyB,EAAE;gBACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,yBAAyB,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aACtH;iBACI,IAAI,IAAI,IAAI,sBAAsB,EAAE;gBACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,sBAAsB,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aACnH;iBACI,IAAI,IAAI,IAAI,kCAAkC,EAAE;gBACnD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qCAAqC,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAClI;iBACI,IAAI,IAAI,IAAI,0BAA0B,EAAE;gBAE3C,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2FAAiB,EAAE;oBACpD,QAAQ,EAAE,OAAO;oBACjB,YAAY,EAAE,IAAI;oBAClB,IAAI,EAAE;wBACJ,KAAK,EAAE,aAAa;wBACpB,OAAO,EAAE,0BAA0B;qBACpC;iBACF,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;aACnE;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QACrH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uBAAuB;IACf,UAAU,CAAC,QAAQ;QAEzB,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,YAAY,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC,iBAAiB,EAAE,GAAG,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC;QAE3F,IAAI,aAAa,GAAa;YAC5B,QAAQ,EAAE,QAAQ,CAAC,MAAM;YACzB,WAAW,EAAE,QAAQ,CAAC,SAAS;YAC/B,UAAU,EAAE,QAAQ,CAAC,QAAQ;YAC7B,SAAS,EAAE,QAAQ,CAAC,OAAO;YAC3B,UAAU,EAAE,QAAQ,CAAC,QAAQ;YAC7B,KAAK,EAAE,YAAY;YACnB,UAAU,EAAE,QAAQ,CAAC,QAAQ;YAC7B,QAAQ,EAAE,QAAQ,CAAC,MAAM;YACzB,QAAQ,EAAE,CAAC;YACX,OAAO,EAAE,CAAC;YACV,MAAM,EAAE,QAAQ;SACjB;QAED,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC5E,IAAI,IAAI,IAAI,yBAAyB,EAAE;gBACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,sBAAsB,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aACnH;iBACI,IAAI,IAAI,IAAI,4BAA4B,EAAE;gBAE7C,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2FAAiB,EAAE;oBACpD,QAAQ,EAAE,OAAO;oBACjB,YAAY,EAAE,IAAI;oBAClB,IAAI,EAAE;wBACJ,KAAK,EAAE,aAAa;wBACpB,OAAO,EAAE,4BAA4B;qBACtC;iBACF,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,4BAA4B,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;aAClF;QACH,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QACrH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAiC;IACjC,gBAAgB,CAAC,KAAK;QACpB,IAAI,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACxB,OAAO,IAAI,CAAC;SACb;aAAM;YACL,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,mCAAmC;IACnC,eAAe,CAAC,KAAK;QACnB,IAAI,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;YACrB,OAAO,IAAI,CAAC;SACb;aAAM;YACL,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,cAAc;IACP,WAAW,CAAC,MAAM;QACvB,IAAI,MAAM,GAAG,CAAC,EAAE;YACd,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBACxE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACzD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC7D,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC/D,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC7D,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC3D,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC7D,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACnD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;;wFAnLU,oBAAoB;kHAApB,oBAAoB;QCjBjC,yEAAiB;QACb,8EAAsB;QAClB,yEAAyF;QACrF,qEAAI;QAAA,kEAA6C;QAAA,uDAAyC;QAAA,4DAAK;QACnG,4DAAM;QAEN,0EAAwF;QAAzD,gJAAY,gCAAwB,IAAC;QAEhE,mFAAkB;QACd,yEAA4D;QACxD,yEAAkG;QAE9F,0EACsB;QAClB,qFAAmD;QAC/C,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,4EACoC;QAD7B,wJAAY,4BAAwB,IAAC;QAA5C,4DACoC;QACpC,+HACwB;QACxB,+HACuC;QAC3C,4DAAiB;QACrB,4DAAM;QAEN,0EACsB;QAClB,qFAAmD;QAC/C,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACjC,6EACoC;QAD7B,wJAAY,4BAAwB,IAAC;QAA5C,4DACoC;QACpC,+HACwB;QACxB,+HACiC;QACrC,4DAAiB;QACrB,4DAAM;QAEN,0EACsB;QAClB,qFAAmD;QAC/C,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,6EACqC;QAAjC,wJAAY,uBAAmB,IAAC;QADpC,4DACqC;QACrC,+HACwB;QACxB,+HAEY;QACZ,+HAEqB;QACzB,4DAAiB;QACrB,4DAAM;QAEV,4DAAM;QAEN,2EAC4B;QAExB,0EACsB;QAClB,qFAAmD;QAC/C,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAClC,6EACoF;QAD7E,wJAAY,2BAAuB,IAAC;QAA3C,4DACoF;QACpF,+HACwB;QACxB,+HACsB;QACtB,+HAC2B;QAC3B,+HAC2B;QAC/B,4DAAiB;QACrB,4DAAM;QAEN,0EACsB;QAClB,qFAAmD;QAC/C,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,wEAAwF;QACxF,wFAAwE;QACxE,qFAAiD;QACjD,+HACwB;QAC5B,4DAAiB;QACrB,4DAAM;QAEN,0EACsB;QAClB,qFAAmD;QAC/C,6EAAW;QAAA,oEAAQ;QAAA,4DAAY;QAC/B,kFAA8C;QAC1C,qIAKe;QACnB,4DAAa;QACb,+HACoB;QACxB,4DAAiB;QACrB,4DAAM;QAEV,4DAAM;QAEN,2EAC4B;QAExB,0EACsB;QAClB,qFAAmD;QAC/C,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,6EAC4E;QADrE,wJAAY,uBAAmB,IAAC;QAAvC,4DAC4E;QAC5E,gFAA2C;QAAvB,uKAAsB;QAAC,wDACzB;QAAA,4DAAW;QAC7B,+HACwB;QACxB,+HACiC;QACrC,4DAAiB;QACrB,4DAAM;QAGN,wEAA8D;QAE9D,qEAEM;QAEV,4DAAM;QACV,4DAAM;QACV,4DAAmB;QAEnB,2EAAgF;QAC5E,2EAAsD;QAClD,2EAAoC;QAChC,8EACgC;QAAC,oEAA0D;QACvF,iEAAI;QAAA,4DAAS;QACjB,8EACkB;QAAA,oEAAiD;QAAC,wDACrD;QAAA,4DAAS;QAC5B,4DAAM;QACN,2EAAqC;QACjC,0EAAmB;QAAA,2FAA+B;QAAA,4DAAK;QAC3D,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAO;QAEX,4DAAW;QACf,4DAAM;;;QAzJuD,0DAAyC;QAAzC,iHAAyC;QAGxF,0DAAwB;QAAxB,qFAAwB;QAYM,0DAAsD;QAAtD,6KAAsD;QAEtD,0DAAyD;QAAzD,yHAAyD;QAWzD,0DAAqD;QAArD,2KAAqD;QAErD,0DAAwD;QAAxD,wHAAwD;QAWxD,0DAAoD;QAApD,yKAAoD;QAEpD,0DAA4D;QAA5D,0HAA4D;QAG5D,0DAAqD;QAArD,qHAAqD;QAiBrD,0DAAqD;QAArD,2KAAqD;QAErD,0DAAkD;QAAlD,0KAAkD;QAElD,0DAAwD;QAAxD,wHAAwD;QAExD,0DAAwD;QAAxD,wHAAwD;QASI,0DAAe;QAAf,qFAAe;QAAhF,+EAAwB;QACE,0DAAc;QAAd,qEAAc;QAEnC,0DAAgD;QAAhD,iKAAgD;QAUzB,0DAAW;QAAX,iFAAW;QAOlC,0DAAiD;QAAjD,uKAAiD;QAezD,0DAAmC;QAAnC,gGAAmC;QACI,0DACzB;QADyB,2GACzB;QACN,0DAAqD;QAArD,2KAAqD;QAErD,0DAAwD;QAAxD,wHAAwD;QAmBpE,0DAA6C;QAA7C,8IAA6C;QAGG,0DAA8B;QAA9B,2FAA8B;QAClB,0DACrD;QADqD,2GACrD;;;;;;;;;;;;;;;;;;ACjJvC,0BAA0B;AACnB,MAAM,iBAAiB;CAI7B;AAED,4BAA4B;AACrB,MAAM,cAAc;CAG1B;AAED,8BAA8B;AACvB,MAAM,gBAAgB;CAE5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTgF;AAER;AAEQ;;;;;;;;;;;;;;;;;;ICGjD,iFACmE;IAC/D,uEAAM;IAAA,uDAA2C;IAAA,4DAAO;IAC5D,4DAAa;;;IAFT,gLAA8D;IACxD,0DAA2C;IAA3C,uHAA2C;;;IAHzD,wEAAqD;IACjD,qJAGa;IACjB,qEAAe;;;IAJsB,0DAAW;IAAX,oFAAW;;;IAQ5C,iFAC8B;IAC1B,uEAAM;IAAA,uDAA2C;IAAA,4DAAO;IAC5D,4DAAa;;;;IAHiC,qFAAyB;IAE7D,0DAA2C;IAA3C,uHAA2C;;;IAHzD,wEAAoD;IAChD,qJAGa;IACjB,qEAAe;;;IAJsB,0DAAW;IAAX,oFAAW;;;IAQpD,4EAAiE;IAAA,6EACzD;IAAA,4DAAY;;;IAUhB,iFAAgF;IAC5E,uEAAM;IAAA,uDAAuB;IAAA,4DAAO;IACxC,4DAAa;;;IAFqC,0FAA6B;IACrE,0DAAuB;IAAvB,wFAAuB;;;;IAHrC,iFACkF;IAA9C,qXAA6C;IAC7E,mJAEa;IACjB,4DAAa;;;IAJA,sFAAsB;IACI,0DAAa;IAAb,sFAAa;;;;IAQhD,iFACwD;IAApD,4bAAmD;IACnD,uEAAM;IAAA,uDAAmB;IAAA,4DAAO;IACpC,4DAAa;;;IAHuC,sFAAyB;IAEnE,0DAAmB;IAAnB,oFAAmB;;;;IAJjC,iFAC0D;IAAtD,sXAAmC;IACnC,mJAGa;IACjB,4DAAa;;;IALT,iGAAmC;IACJ,0DAAmB;IAAnB,4FAAmB;;;IAMtD,4EAAmE;IAAA,oFACpD;IAAA,4DAAY;;ADnC5C,MAAM,0BAA0B;IA4BrC,YAAoB,GAAsB,EAAS,MAAiB,EAAU,KAAqB,EAAS,UAAsB,EAAS,QAAqB,EAAU,YAAiC,EAAS,MAAc,EAAS,WAAwB,EAC/N,IAAS,EAAS,SAAgD,EAAU,WAAwB;QADpH,QAAG,GAAH,GAAG,CAAmB;QAAS,WAAM,GAAN,MAAM,CAAW;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAS,eAAU,GAAV,UAAU,CAAY;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAa;QAC/N,SAAI,GAAJ,IAAI,CAAK;QAAS,cAAS,GAAT,SAAS,CAAuC;QAAU,gBAAW,GAAX,WAAW,CAAa;QA5BjI,aAAQ,GAAQ,EAAE,CAAC;QACnB,eAAU,GAAQ,EAAE,CAAC;QACrB,qBAAgB,GAAQ,EAAE,CAAC;QAC3B,mBAAc,GAAQ,EAAE,CAAC;QACzB,uBAAkB,GAAQ,EAAE,CAAC;QAUpC,sBAAiB,GAAG,EAAE,CAAC;QAEvB,cAAS,GAAG,KAAK,CAAC;QACX,qBAAgB,GAAY,KAAK,CAAC;QACzC,0BAAqB,GAAa,EAAE,CAAC;QACrC,wBAAmB,GAAa,EAAE,CAAC;QAEnC,eAAU,GAAG,IAAI,qDAAS,CAAC;YACzB,YAAY,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YACrC,QAAQ,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACpD,UAAU,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SACvD,CAAC,CAAC;IAIC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QACpC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY;QAChC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC/D,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAA2C;IACpC,YAAY,CAAC,YAAiB;QACnC,MAAM,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC,MAAM;QACxC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,mCAAmC,GAAG,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC7F,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6BAA6B;IAC7B,uBAAuB,CAAC,QAAgB;QACtC,MAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACvD,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACvC;aACI;YACH,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SACzC;QACD,MAAM,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACnE,IAAI,eAAe,KAAK,CAAC,CAAC,EAAE;YAC1B,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;SACrD;IACH,CAAC;IAED,2CAA2C;IAC3C,yBAAyB,CAAC,QAAgB;QACxC,MAAM,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACzD,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACzC;aACI;YACH,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAC3C;QACD,MAAM,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC/D,IAAI,aAAa,KAAK,CAAC,CAAC,EAAE;YACxB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;SACjD;IACH,CAAC;IAED,mBAAmB;IACZ,MAAM,CAAC,UAAU;QACtB,IAAI,YAAY,GAAG,UAAU,CAAC,YAAY;QAC1C,IAAI,YAAY,IAAI,EAAE,IAAI,YAAY,IAAI,SAAS,EAAE;YACnD,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SAC7B;aACI;YACH,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SAC7B;IACH,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IACzB,CAAC;IAED,iBAAiB,CAAC,KAAsB;QACtC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;IAC3B,CAAC;IAED,iBAAiB;IACV,UAAU,CAAC,QAAQ;QACxB,IAAI,iBAAiB,GAAG,QAAQ,CAAC,UAAU,CAAC;QAC5C,IAAI,cAAc,GAAG,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEjD,IAAI,kBAAkB,GAAsB;YAC1C,QAAQ,EAAE,QAAQ,CAAC,QAAQ,CAAC,MAAM;YAClC,eAAe,EAAE,cAAc;YAC/B,oBAAoB,EAAE,EAAE;SACzB;QAED,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,8BAA8B,EAAE,kBAAkB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjG,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2FAAiB,EAAE;gBACpD,QAAQ,EAAE,OAAO;gBACjB,YAAY,EAAE,IAAI;gBAElB,IAAI,EAAE;oBACJ,KAAK,EAAE,aAAa;oBACpB,OAAO,EAAE,iCAAiC;iBAC3C;aAEF,CAAC,CAAC;YACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;gBACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kCAAkC,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;gBACvF,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;YAC3B,CAAC,CAAC,CAAC;QACL,CAAC,CAAE,CAAC;IACN,CAAC;IAED,mDAAmD;IAC5C,WAAW;QAChB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,KAAiB;QAC/B,yCAAyC;QACzC,KAAK,CAAC,eAAe,EAAE,CAAC;IAC1B,CAAC;IAED,uBAAuB;IACf,UAAU,CAAC,QAAQ;QACzB,MAAM,mBAAmB,GAAG,IAAI,CAAC,gBAAgB;aAC9C,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aACvE,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAElC,MAAM,yBAAyB,GAAG,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEhE,IAAI,mBAAmB,GAAmB;YACxC,QAAQ,EAAE,QAAQ,CAAC,QAAQ;YAC3B,oBAAoB,EAAE,yBAAyB;SAChD;QAED,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,+BAA+B,EAAE,mBAAmB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACpG,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2FAAiB,EAAE;gBACpD,QAAQ,EAAE,OAAO;gBACjB,YAAY,EAAE,IAAI;gBAElB,IAAI,EAAE;oBACJ,KAAK,EAAE,aAAa;oBACpB,OAAO,EAAE,mCAAmC;iBAC7C;aAEF,CAAC,CAAC;YACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE;gBACrC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;gBACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kCAAkC,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;YACzF,CAAC,CAAC,CAAC;QACL,CAAC,EAAE,KAAK,CAAC,EAAE;YACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,uBAAuB,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QACrH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,cAAc;IACP,WAAW,CAAC,GAAG;QACpB,IAAI,GAAG,GAAG,CAAC,EAAE;YACX,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,6CAA6C,EAAE,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAC3F,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACvD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAC3D,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,mCAAmC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBACzF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;oBAC7B,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACpF,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC;IACd,CAAC;;oGAlMU,0BAA0B,slCA6BzB,qEAAe;wHA7BhB,0BAA0B;QCrBvC,wEAA6B;QAAA,uDAA2D;QAAA,4DAAK;QAC7F,wFAA2C;QAEvC,0EAA+B;QAE3B,yEAAyC;QACrC,yEAAkG;QAE9F,yEAAsG;QAClG,oFAAmD;QAC/C,4EAAW;QAAA,+DAAI;QAAA,4DAAY;QAC3B,iFAAyF;QAAzC,iLAAmB,wBAAoB,IAAC;QAEpF,0IAKe;QAGf,0IAKe;QAEnB,4DAAa;QAEb,oIACoB;QACxB,4DAAiB;QACrB,4DAAM;QAEN,0EAAsG;QAClG,qFAAmD;QAC/C,6EAAW;QAAA,uEAAW;QAAA,4DAAY;QAElC,sIAKa;QAGb,uIAMa;QAEb,oIAC2B;QAC/B,4DAAiB;QACrB,4DAAM;QAGN,wEAAsD;QAE1D,4DAAM;QACV,4DAAM;QAEV,4DAAO;QAEX,4DAAqB;QAErB,sFAAoB;QAChB,2EAAoC;QAChC,8EAA6F;QAArF,mJAAS,iBAAa,IAAC;QAA+D,oEAC7C;QAAC,mEAAM;QAAA,4DAAS;QACjE,8EACqD;QAAjD,mJAAS,gCAAwB,IAAC;QAAe,oEAAiD;QAAC,wDAEzF;QAAA,4DAAS;QAC3B,4DAAM;QACN,2EAAqC;QACjC,0EAAmB;QAAA,2FAA+B;QAAA,4DAAK;QAC3D,4DAAM;QACV,4DAAqB;;QAlFQ,0DAA2D;QAA3D,mIAA2D;QAG9E,0DAAwB;QAAxB,qFAAwB;QAUS,0DAAoC;QAApC,oGAAoC;QAQpC,0DAAmC;QAAnC,mGAAmC;QAS1C,0DAAmD;QAAnD,2KAAmD;QASlD,0DAAoC;QAApC,oGAAoC;QAQpC,0DAAmC;QAAnC,mGAAmC;QAQpC,0DAAqD;QAArD,+KAAqD;QAmBzB,0DAAmD;QAAnD,oHAAmD;QACJ,0DAEzF;QAFyF,kIAEzF;;;;;;;;;;;;;;;;;;ACtEf,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;gHAAlB,kBAAkB;QCP/B,oEAAG;QAAA,gEAAI;QAAC,sHAA0D;QAAA,4DAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMd;AACwC;AACxD;;;;;;;;;;;;;;;;;;;;ICwB5B,0EAA0G;IACtG,0EAAsB;IAAA,uDAAiB;IAAA,4DAAM;IAC7C,0EAAsB;IAAA,uDAAgB;IAAA,4DAAM;IAC5C,0EAAsB;IAAA,uDAAiB;IAAA,4DAAM;IAC7C,0EAAsB;IAAA,uDAAa;IAAA,4DAAM;IACzC,0EAAoD;IAChD,yEAAgG;IAAA,oEAC5C;IAAA,4DAAI;IACxD,8EACoC;IAAhC,6XAA+B;IAAC,oEAA8C;IAAA,4DAAS;IAC/F,4DAAM;IACV,4DAAM;;;IAVoB,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAgB;IAAhB,gFAAgB;IAChB,0DAAiB;IAAjB,iFAAiB;IACjB,0DAAa;IAAb,6EAAa;IAE5B,0DAA6C;IAA7C,6JAA6C;;;;IAU5D,0EAAqD;IACjD,0EAA8B;IAC1B,+EAA4C;IACxC,0FACyC;IAArC,6VAAoC;IAAC,4DAAsB;IACnE,4DAAW;IACf,4DAAM;IACV,4DAAM;;;;ADvCP,MAAM,iBAAiB;IAc5B,YAAmB,UAAsB,EAAS,MAAiB,EAAS,QAAqB,EAAU,YAAiC,EAAS,MAAc,EAAS,WAAwB;QAAjL,eAAU,GAAV,UAAU,CAAY;QAAS,WAAM,GAAN,MAAM,CAAW;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAa;QAZ7L,aAAQ,GAAQ,EAAE,CAAC;QACnB,gBAAW,GAAQ,EAAE,CAAC;QAGtB,UAAK,GAAG,CAAC,CAAC;QASf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QAE1C,IAAI,CAAC,MAAM,CAAC,MAAM;aACf,IAAI,CAAC,sDAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,YAAY,0DAAa,CAAC,CAAC;aACrD,SAAS,CAAC,CAAC,KAAoB,EAAE,EAAE;YAClC,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;aACvC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAEM,WAAW;QAChB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAClE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS;IACT,MAAM;QACJ,IAAI,IAAI,CAAC,QAAQ,KAAK,EAAE,EAAE;YACxB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;aACI;YAEH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;gBAC5C,OAAO,CACL,GAAG,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;oBAC5E,GAAG,CAAC,OAAO,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;oBAC3E,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;oBACxE,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CACrC,CAAC;YACJ,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;SACf;IACH,CAAC;IAED,aAAa;IACN,aAAa,CAAC,KAAK;QACxB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,CAAC;IAED,cAAc;IACP,aAAa,CAAC,IAAS;QAC5B,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0GAAsB,EAAE;YACzD,QAAQ,EAAE,OAAO;YACjB,YAAY,EAAE,IAAI;YAElB,IAAI,EAAE;gBACJ,KAAK,EAAE,gBAAgB;gBACvB,OAAO,EAAE,yCAAyC;aACnD;SAEF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;YAC/C,IAAI,YAAY,EAAE;gBAChB,MAAM,KAAK,GAAW,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClD,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;oBAChB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBAC/B,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,8BAA8B,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBAC7F,CAAC,CAAC,CAAC;iBACJ;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;kFApFU,iBAAiB;+GAAjB,iBAAiB;QChB9B,yEAAiB;QACb,8EAAsB;QAElB,yEAAkF;QAC9E,qEAAI;QAAA,kEAA6C;QAAA,2EAAgB;QAAA,4DAAK;QACtE,2EAAyB;QACrB,qEAAI;QACA,wEAAqB;QAAC,qEAAkD;QACpE,4EAC8C;QAA1C,wLAAsB,iFAAU,YAAQ,IAAlB;QAD1B,4DAC8C;QAClD,4DAAK;QAEL,yEAAkB;QACd,6EACsC;QAAA,oEAA6C;QAAA,sEAC5E;QAAA,4DAAS;QACpB,4DAAK;QACT,4DAAK;QACT,4DAAQ;QAEZ,4DAAM;QACN,0EAA2B;QAC3B,2EAAmC;QAE/B,2EAA4B;QACxB,2EAA6B;QAAA,gEAAI;QAAA,4DAAM;QACvC,2EAA6B;QAAA,oEAAQ;QAAA,4DAAM;QAC3C,2EAA6B;QAAA,sEAAU;QAAA,4DAAM;QAC7C,2EAA6B;QAAA,gEAAI;QAAA,4DAAM;QACvC,2EAA2D;QAAA,kEAAM;QAAA,4DAAM;QAC3E,4DAAM;QAEN,iHAWM;;QAEV,4DAAM;QACN,0EAA2B;QAE3B,gHAOM;QAEV,4DAAW;QACf,4DAAM;;QAjDsB,2DAAsB;QAAtB,iFAAsB;QAKtB,0DAAiC;QAAjC,6IAAiC;QAkB3B,2DAAkE;QAAlE,+OAAkE;QAgBtF,0DAAyB;QAAzB,yFAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9CuD;AAM1B;AAC4B;AACf;;;;;;;;;;;;;;;;;;;ICsBrE,0EAA0G;IACtG,0EAAmC;IAAA,uDAAyC;IAAA,4DAAM;IAClF,0EAAmC;IAAA,uDAAiB;IAAA,4DAAM;IAC1D,0EAA+C;IAC3C,wEAA0F;IAAvF,uYAAuC;IAAgD,mEACtC;IAAA,4DAAI;IACxD,6EACiB;IADT,kYAA+B;IACtB,mEAA8C;IAAA,4DAAS;IAC5E,4DAAM;IACV,4DAAM;;;IARiC,0DAAyC;IAAzC,uHAAyC;IACzC,0DAAiB;IAAjB,iFAAiB;;;;IAY5D,0EAAqD;IACjD,0EAA8B;IAC1B,+EAA4C;IACxC,0FACyC;IAArC,mWAAoC;IAAC,4DAAsB;IACnE,4DAAW;IACf,4DAAM;IACV,4DAAM;;;ADnCP,MAAM,uBAAuB;IAelC,YAAmB,UAAsB,EAAS,MAAiB,EAAS,QAAqB,EAAU,YAAiC,EAAS,MAAc,EAAS,WAAwB;QAAjL,eAAU,GAAV,UAAU,CAAY;QAAS,WAAM,GAAN,MAAM,CAAW;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAa;QAd7L,aAAQ,GAAQ,EAAE,CAAC;QACnB,gBAAW,GAAQ,EAAE,CAAC;QACtB,eAAU,GAAQ,EAAE,CAAC;QAGrB,UAAK,GAAG,CAAC,CAAC;QAMV,aAAQ,GAAQ,EAAE,CAAC;QACnB,gBAAW,GAAQ,EAAE,CAAC;QAM7B,eAAU,GAAG,IAAI,qDAAS,CAAC;YACzB,YAAY,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,EAAE,CAAC;YACrC,QAAQ,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACpD,UAAU,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SACvD,CAAC,CAAC;QAPD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IAC5C,CAAC;IAQD,QAAQ;QACN,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,YAAY;IACZ,MAAM;QACJ,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,EAAE;YACvB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;aACI;YACH,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;gBAC5C,OAAO,CACL,GAAG,CAAC,YAAY,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;oBAChF,GAAG,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC;oBAC5E,GAAG,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,CAAC,CAC7E,CAAC;YACJ,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;SACf;IACH,CAAC;IAED,aAAa;IACN,aAAa,CAAC,KAAK;QACxB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QAClB,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,CAAC;IAED,sBAAsB;IACf,WAAW;QAChB,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,iCAAiC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACnF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,qBAAqB;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wBAAwB;IACxB,yBAAyB;IACzB,+DAA+D;IAC/D,gCAAgC;IAChC,uHAAuH;IACvH,eAAe;IACf,yDAAyD;IACzD,iEAAiE;IACjE,QAAQ;IACR,kBAAkB;IAClB,YAAY;IACZ,iDAAiD;IACjD,IAAI;IAEJ,aAAa;IACN,cAAc;QACnB,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAClE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,YAAiB;QAC1B,IAAI,CAAC,YAAY,GAAG,YAAY;QAChC,uCAAuC;QACvC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sGAA0B,EAAE;YAC7D,KAAK,EAAE,OAAO;YACd,YAAY,EAAE,IAAI;YAElB,IAAI,EAAE,EAAE,YAAY,EAAE,YAAY,EAAE;SACrC,CAAC,CAAC;IACL,CAAC;IAED,qBAAqB;IACd,UAAU;QACf,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,qCAAqC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAEzF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB;IACb,aAAa,CAAC,IAAS;QAC5B,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0GAAsB,EAAE;YACzD,QAAQ,EAAE,OAAO;YACjB,YAAY,EAAE,IAAI;YAElB,IAAI,EAAE;gBACJ,KAAK,EAAE,gBAAgB;gBACvB,OAAO,EAAE,uDAAuD;aACjE;SACF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE;YAC/C,IAAI,YAAY,EAAE;gBAChB,MAAM,KAAK,GAAW,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClD,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;oBAChB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBAE/B,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2FAAiB,EAAE;wBACpD,QAAQ,EAAE,OAAO;wBACjB,YAAY,EAAE,IAAI;wBAElB,IAAI,EAAE;4BACJ,KAAK,EAAE,eAAe;4BACtB,OAAO,EAAE,+CAA+C;yBACzD;qBAEF,CAAC,CAAC;oBAEH,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,gDAAgD,IAAI,CAAC,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;oBACrH,CAAC,CAAC,CAAC;iBACJ;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;;8FAzIU,uBAAuB;qHAAvB,uBAAuB;QClBpC,yEAAiB;QACb,8EAAsB;QAElB,yEAAyF;QAErF,qEAAI;QAAA,kEAA6C;QAAA,kFAAuB;QAAA,4DAAK;QAE7E,2EAAyB;QACrB,qEAAI;QACA,wEAAqB;QAAC,qEAAkD;QACpE,4EAC4F;QAAxF,8LAAsB,uFAAU,YAAQ,IAAlB,uFAA6B,YAAQ,IAArC,uGAAwD,YAAQ,IAAhE;QAD1B,4DAC4F;QAChG,4DAAK;QACL,yEAAkB;QACd,6EACkB;QADsC,gJAAS,eAAW,IAAI,CAAC,IAAC;QAChE,oEAA6C;QAAA,sEAAU;QAAA,4DAAS;QACtF,4DAAK;QACT,4DAAK;QACT,4DAAQ;QAEZ,4DAAM;QAEN,0EAA2B;QAE3B,2EAAmC;QAE/B,2EAA4B;QACxB,2EAA0C;QAAA,gEAAI;QAAA,4DAAM;QACpD,2EAA0C;QAAA,uEAAW;QAAA,4DAAM;QAC3D,2EAAsD;QAAA,kEAAM;QAAA,4DAAM;QACtE,4DAAM;QAEN,uHASM;;QAEV,4DAAM;QAEN,0EAA2B;QAC3B,sHAOM;QACV,4DAAW;QAEf,4DAAM;;QA7CsB,2DAAsB;QAAtB,iFAAsB;QAqBhB,2DAAkE;QAAlE,+OAAkE;QActF,0DAAyB;QAAzB,yFAAyB;;ADiHhC,MAAM,2BAA2B;IAGtC,YAAmB,UAAsB,EAAS,MAAiB,EAAS,QAAqB,EAAU,YAAiC,EAAS,MAAc,EAAS,WAAwB;QAAjL,eAAU,GAAV,UAAU,CAAY;QAAS,WAAM,GAAN,MAAM,CAAW;QAAS,aAAQ,GAAR,QAAQ,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAqB;QAAS,WAAM,GAAN,MAAM,CAAQ;QAAS,gBAAW,GAAX,WAAW,CAAa;QAElM,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;IAC5C,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErK8C;AACA;AACM;AACK;AACL;AACa;AACS;AACS;AACS;AACb;AACnC;AACwB;AACZ;AACE;AAChB;;;AAEpC,MAAM,MAAM,GAAG;IACpB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;IACnD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,oFAAoB,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,EAAE;IACrG,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,oFAAoB,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,EAAC;IACxG,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,2EAAiB,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,EAAC;IAC9F,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,yFAAiB,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,EAAC;IACvG,EAAE,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,yFAAiB,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,EAAC;IAC3G,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,6FAAuB,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,EAAC;IAC1G,EAAE,IAAI,EAAE,2BAA2B,EAAE,SAAS,EAAE,6FAAuB,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,EAAC;IACrH,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,8EAAkB,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,EAAC;CACjG,CAAC;AAyBK,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAblB;YACP,0DAAY;YACZ,mEAAqB,CAAC,MAAM,CAAC;YAC7B,gEAAmB;YACnB,+DAAY;YACZ,+DAAmB;YACnB,wDAAW;YACX,wDAAW;YACX,oEAAe;YACf,sEAAe;SAChB;mIAGU,gBAAgB,mBApBzB,2EAAiB;QACjB,oFAAoB;QACpB,6FAAuB;QACvB,sGAA0B;QAC1B,8EAAkB,aAIlB,0DAAY,8DAEZ,gEAAmB;QACnB,+DAAY;QACZ,+DAAmB;QACnB,wDAAW;QACX,wDAAW;QACX,oEAAe;QACf,sEAAe","sources":["./src/app/admin/superadmin/addedituser/addedituser.component.ts","./src/app/admin/superadmin/addedituser/addedituser.component.html","./src/app/admin/superadmin/addedituserplayer/addedituserplayer.Model.ts","./src/app/admin/superadmin/addedituserplayer/addedituserplayer.component.ts","./src/app/admin/superadmin/addedituserplayer/addedituserplayer.component.html","./src/app/admin/superadmin/dashboard/dashboard.component.ts","./src/app/admin/superadmin/dashboard/dashboard.component.html","./src/app/admin/superadmin/listuser/listuser.component.ts","./src/app/admin/superadmin/listuser/listuser.component.html","./src/app/admin/superadmin/listuserplayer/listuserplayer.component.ts","./src/app/admin/superadmin/listuserplayer/listuserplayer.component.html","./src/app/admin/superadmin/superadmin.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AppService } from 'src/app/app.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { addedituser } from '../addedituser/addedituser.Model';\nimport { edituser } from '../addedituser/addedituser.Model';\nimport { Location } from '@angular/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { OkDialogComponent } from 'src/app/shared/ok-dialog/ok-dialog.component';\n\n@Component({\n  selector: 'app-addedituser',\n  templateUrl: './addedituser.component.html',\n  styleUrls: ['./addedituser.component.css']\n})\n\nexport class AddedituserComponent implements OnInit {\n  public progress: number;\n  public message: string;\n  public form: FormGroup;\n  userId: string | any;\n  isActive: boolean;\n  isDeleted: false;\n  public RoleList = [];\n  public formdata = {};\n  hide = true;\n  today = new Date().toISOString().split('T')[0];\n  submitted = false;\n\n  uploadForm = new FormGroup({\n    userId: new FormControl('', []),\n    password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n    firstName: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    lastName: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    emailId: new FormControl('', [Validators.required, Validators.minLength(3), Validators.pattern(\"^[a-zA0-Z9._%+-]+@[a-zA0-Z9.-]+\\\\.[aA-zZ]{2,4}$\")]),\n    mobileNo: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    dob: new FormControl('', [Validators.required]),\n    roleId: new FormControl('', [Validators.required]),\n  });\n\n  constructor(public dialog: MatDialog, public appService: AppService, public snackBar: MatSnackBar, private route: ActivatedRoute, private router: Router, public formBuilder: FormBuilder, private location: Location) { }\n\n  ngOnInit(): void {\n    this.userId = this.route.snapshot.params['id'];\n    this.getuserbyId(this.userId);\n    this.getRoleMaster();\n  }\n\n  ///getRoleMaster\n  public getRoleMaster() {\n    this.appService.getAllRoles(\"api/role/GetAllRoles\").subscribe(data => {\n      this.RoleList = data;\n    });\n  }\n\n  blockSpaces(event: KeyboardEvent) {\n    if (event.key === ' ') {\n      event.preventDefault();\n    }\n  }\n\n  ///Submitform\n  public Submit(userObject) {\n    var userId = userObject.userId\n    if (userId == \"\") {\n      this.createUser(userObject);\n    }\n    else {\n      this.updateUser(userObject);\n    }\n  }\n\n  //create new user\n  public createUser(formData) {\n\n    let DOB = new Date(formData.dob);\n    let formattedDOB = new Date(DOB.getTime() - DOB.getTimezoneOffset() * 60000).toISOString();\n\n    let AdduserModel: addedituser = {\n      \"firstName\": formData.firstName,\n      \"lastName\": formData.lastName,\n      \"emailId\": formData.emailId,\n      \"mobileNo\": formData.mobileNo,\n      \"dob\": formattedDOB,\n      \"password\": formData.password,\n      \"roleId\": formData.roleId,\n      \"cityId\": 0,\n      \"appId\": 0,\n      \"name\": \"string\",\n    }\n\n    this.appService.AddUser('api/user/AddUser', AdduserModel).subscribe(data => {\n      if (data == \"Username already exists\") {\n        this.snackBar.open('Username already exists', '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n      }\n      else if (data == \"Email already exists\") {\n        this.snackBar.open('Email already exists', '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n      }\n      else if (data == \"Username and Email already exist\") {\n        this.snackBar.open('Username and email is already exist', '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n      }\n      else if (data == \"User Save Successfully. \") {\n\n        const dialogRef = this.dialog.open(OkDialogComponent, {\n          maxWidth: \"500px\",\n          disableClose: true,\n          data: {\n            title: \"Save Action\",\n            message: \"User Added Successfully!\"\n          }\n        });\n        this.router.navigate(['../listuser'], { relativeTo: this.route });\n      }\n    }, error => {\n      this.snackBar.open('Something went wrong!', '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n    });\n  }\n\n  ///update existing user\n  private updateUser(formData) {\n\n    let DOB = new Date(formData.dob);\n    let formattedDOB = new Date(DOB.getTime() - DOB.getTimezoneOffset() * 60000).toISOString();\n\n    let EdituserModel: edituser = {\n      \"userId\": formData.userId,\n      \"firstName\": formData.firstName,\n      \"lastName\": formData.lastName,\n      \"emailId\": formData.emailId,\n      \"mobileNo\": formData.mobileNo,\n      \"dob\": formattedDOB,\n      \"password\": formData.password,\n      \"roleId\": formData.roleId,\n      \"cityId\": 0,\n      \"appId\": 0,\n      \"name\": \"string\"\n    }\n\n    this.appService.edituser('api/user/EditUser', EdituserModel).subscribe(data => {\n      if (data == \"Email Id Already Exists\") {\n        this.snackBar.open('Email already exists', '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n      }\n      else if (data == \"User Update Successfully. \") {\n\n        const dialogRef = this.dialog.open(OkDialogComponent, {\n          maxWidth: \"500px\",\n          disableClose: true,\n          data: {\n            title: \"Edit Action\",\n            message: \"User Updated Successfully!\"\n          }\n        });\n        this.router.navigate(['/admin/superadmin/listuser'], { relativeTo: this.route });\n      }\n    }, error => {\n      this.snackBar.open('Something went wrong!', '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n    });\n  }\n\n  ///Validation for only enter char\n  keyPressOnlyChar(event) {\n    var inp = String.fromCharCode(event.keyCode);\n    if (/[a-zA-Z]/.test(inp)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n\n  ///Validation for only enter number\n  keyPressOnlynum(event) {\n    var inp = String.fromCharCode(event.keyCode);\n    if (/[0-9]/.test(inp)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n\n  ///GetUserById\n  public getuserbyId(userId) {\n    if (userId > 0) {\n      this.appService.getById(\"api/user/GetUserById/\", userId).subscribe(data => {\n        this.uploadForm.controls['userId'].setValue(data.userId);\n        this.uploadForm.controls['password'].setValue(data.password);\n        this.uploadForm.controls['firstName'].setValue(data.firstName);\n        this.uploadForm.controls['lastName'].setValue(data.lastName);\n        this.uploadForm.controls['emailId'].setValue(data.emailId);\n        this.uploadForm.controls['mobileNo'].setValue(data.mobileNo);\n        this.uploadForm.controls['dob'].setValue(data.dob);\n        this.uploadForm.controls['roleId'].setValue(data.roleId);\n      });\n    }\n  }\n}\n","<div class=\"p-1\">\n    <mat-card class=\"p-0\">\n        <div fxLayout=\"row wrap \" fxLayoutAlign=\"space-between center\" class=\"w-100 p-2 crdhead\">\n            <h2><i class=\"fa fa-bars\" aria-hidden=\"true\"></i>&nbsp; {{ userId ? 'Edit' : 'Add' }} User</h2>\n        </div>\n\n        <form [formGroup]=\"uploadForm\" (ngSubmit)=\"Submit(uploadForm.value)\" autocomplete=\"off\">\n\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\" class=\"container\">\n                    <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\" class=\"block-2\">\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>First Name </mat-label>\n                                <input (keypress)=\"keyPressOnlyChar($event)\" formControlName=\"firstName\" required\n                                    minlength=\"3\" matInput required>\n                                <mat-error *ngIf=\" uploadForm.controls.firstName.errors?.required\">First Name Is\n                                    Required</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.firstName.hasError('minlength')\">First Name At\n                                    Least 3 Characters Long</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Last Name </mat-label>\n                                <input (keypress)=\"keyPressOnlyChar($event)\" formControlName=\"lastName\" required\n                                    minlength=\"3\" matInput required>\n                                <mat-error *ngIf=\" uploadForm.controls.lastName.errors?.required\">Last Name Is\n                                    Required</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.lastName.hasError('minlength')\">Last Name At Least\n                                    3 Characters Long</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Email ID</mat-label>\n                                <input formControlName=\"emailId\" required minlength=\"3\" matInput required\n                                    (keypress)=\"blockSpaces($event)\">\n                                <mat-error *ngIf=\" uploadForm.controls.emailId.errors?.required\">Email is\n                                    required</mat-error>\n                                <mat-error *ngIf=\" uploadForm.controls.emailId.hasError('invalidEmail')\">Invalid email\n                                    address\n                                </mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.emailId.hasError('pattern')\">Please enter\n                                    valid\n                                    email</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                    </div>\n\n                    <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\"\n                        class=\"block-2 mttop20\">\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Mobile No. </mat-label>\n                                <input (keypress)=\"keyPressOnlynum($event)\" formControlName=\"mobileNo\" required\n                                    minlength=\"3\" pattern=\"[0-9 ]+\" minlength=\"10\" maxlength=\"10\" matInput required>\n                                <mat-error *ngIf=\" uploadForm.controls.mobileNo.errors?.required\">Mobile No. Is\n                                    Required</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.mobileNo.errors?.pattern\">Please Enter Only\n                                    Number</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.mobileNo.hasError('minlength')\">Mobile number must\n                                    be 10 digit</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.mobileNo.hasError('maxlength')\">Mobile number must\n                                    be 10 digit</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Date of Birth</mat-label>\n                                <input [matDatepicker]=\"picker\" matInput formControlName=\"dob\" required max=\"{{today}}\">\n                                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                <mat-datepicker touchUi #picker></mat-datepicker>\n                                <mat-error *ngIf=\" uploadForm.controls.dob.errors?.required\">Date Of Birth Is\n                                    Required</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Role ID </mat-label>\n                                <mat-select formControlName=\"roleId\" required>\n                                    <ng-container *ngFor=\"let role of RoleList\">\n                                        <mat-option *ngIf=\"role.roleId !== 1&& role.roleId !== 12\"\n                                            [value]=\"role.roleId\">\n                                            <span>{{role.name}}</span>\n                                        </mat-option>\n                                    </ng-container>\n                                </mat-select>\n                                <mat-error *ngIf=\"uploadForm.controls.roleId.errors?.required\">Please select\n                                    role</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                    </div>\n\n                    <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\"\n                        class=\"block-2 mttop20\">\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Password </mat-label>\n                                <input (keypress)=\"blockSpaces($event)\" matInput placeholder=\"password\"\n                                    [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" required>\n                                <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' :\n                                    'visibility'}}</mat-icon>\n                                <mat-error *ngIf=\" uploadForm.controls.password.errors?.required\">Password Is\n                                    Required</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.password.hasError('minlength')\">Password At Least\n                                    6 Characters Long</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <!-- hiddenfield -->\n                        <input formControlName=\"userId\" minlength=\"3\" matInput hidden>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                        </div>\n\n                    </div>\n                </div>\n            </mat-card-content>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\" p-2 crdfooter\">\n                <div fxLayout=\"\" fxLayoutGap=\"10px\" class=\"container\">\n                    <div fxFlex=\"50%\" class=\"text-left\">\n                        <button [routerLink]=\"['/admin/superadmin/listuser']\" mat-raised-button color=\"accent\"\n                            type=\"button\" class=\"crbtn\"> <i class=\"fa fa-arrow-circle-left\" aria-hidden=\"true\"></i>\n                            BACK</button>\n                        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!uploadForm.valid\"\n                            class=\"crbtn\"><i class=\"fa fa-floppy-o\" aria-hidden=\"true\"></i> {{ userId ? 'UPDATE' :\n                            'SUBMIT' }}</button>\n                    </div>\n                    <div fxFlex=\"50%\" class=\"text-right\">\n                        <h4 class=\"crdtip\">Tip : (*) fields are mandatory.</h4>\n                    </div>\n                </div>\n            </div>\n\n        </form>\n\n    </mat-card>\n</div>","///Model for adduserplayer\nexport class addedituserplayer {\n  \"userId\": 0;\n  \"userPlayerIds\": 0;\n  \"uncheckedPlayerIds\": any;\n}\n\n///Model for edit userplayer\nexport class edituserplayer {\n  \"userId\": 0;\n  \"uncheckedPlayerIds\": any;\n}\n\n///Model for delete userplayer\nexport class deleteuserplayer {\n  \"userPlayerId\": number\n}\n\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AppService } from 'src/app/app.service';\nimport { AppSettings } from 'src/app/app.settings';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, Validators, FormControl, FormBuilder } from '@angular/forms';\nimport { addedituserplayer, edituserplayer } from './addedituserplayer.Model';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { AddeditcontentComponent } from '../../contentadmin/addeditcontent/addeditcontent.component';\nimport { OkDialogComponent } from 'src/app/shared/ok-dialog/ok-dialog.component';\nimport { MatSelectChange } from '@angular/material/select';\nimport { ChangeDetectorRef } from '@angular/core';\n\n@Component({\n  selector: 'app-addedituserplayer',\n  templateUrl: './addedituserplayer.component.html',\n  styleUrls: ['./addedituserplayer.component.css']\n})\n\nexport class AddedituserplayerComponent implements OnInit {\n  public UserList: any = [];\n  public PlayerList: any = [];\n  public MappedPlayerList: any = [];\n  public UserplayerList: any = [];\n  public filteredPlayerList: any = [];\n  userId: string | any | number;\n  public progress: number;\n  public message: string;\n  public form: FormGroup;\n  userPlayerId: string | any;\n  playerId: string | any;\n  public Userplayer: any\n  public ThisUserplayer: any\n  public Uid: string | any;\n  selectedPlayerIds = [];\n  isAddMode!: boolean;\n  submitted = false;\n  public isPlayerSelected: boolean = false;\n  EditselectedPlayerIds: string[] = [];\n  unselectedPlayerIds: string[] = [];\n\n  uploadForm = new FormGroup({\n    userPlayerId: new FormControl('', []),\n    username: new FormControl('', [Validators.required]),\n    playername: new FormControl('', [Validators.required]),\n  });\n\n  constructor(private cdr: ChangeDetectorRef, public dialog: MatDialog, private route: ActivatedRoute, public appService: AppService, public snackBar: MatSnackBar, private tokenStorage: TokenStorageService, public router: Router, public appSettings: AppSettings\n    , @Inject(MAT_DIALOG_DATA) public data: any, public dialogRef: MatDialogRef<AddeditcontentComponent>, private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.getUserList();\n    this.isAddMode = !this.userPlayerId;\n    var Uid = this.data.userPlayerId\n    this.getUserList();\n    this.getuserbyId(Uid);\n    this.uploadForm.get('playername').valueChanges.subscribe(value => {\n      this.isPlayerSelected = value.length > 0;\n    });\n  }\n\n  ///Change Player dropdown as User Selection\n  public onChangeUser(selectedUser: any) {\n    const roleId = selectedUser.value.roleId\n    this.appService.getfilteruserId(\"api/UserPlayer/GetPlayerByRoleId/\" + roleId).subscribe(data => {\n      this.PlayerList = data;\n      this.cdr.detectChanges();\n    });\n  }\n\n  ///Edit check player dropdown\n  updateSelectedPlayerIds(playerId: string) {\n    const index = this.selectedPlayerIds.indexOf(playerId);\n    if (index === -1) {\n      this.selectedPlayerIds.push(playerId);\n    }\n    else {\n      this.selectedPlayerIds.splice(index, 1);\n    }\n    const unselectedIndex = this.unselectedPlayerIds.indexOf(playerId);\n    if (unselectedIndex !== -1) {\n      this.unselectedPlayerIds.splice(unselectedIndex, 1);\n    }\n  }\n\n  ///Edit on submit only unchecked player IDs\n  updateUnselectedPlayerIds(playerId: string) {\n    const index = this.unselectedPlayerIds.indexOf(playerId);\n    if (index === -1) {\n      this.unselectedPlayerIds.push(playerId);\n    }\n    else {\n      this.unselectedPlayerIds.splice(index, 1);\n    }\n    const selectedIndex = this.selectedPlayerIds.indexOf(playerId);\n    if (selectedIndex !== -1) {\n      this.selectedPlayerIds.splice(selectedIndex, 1);\n    }\n  }\n\n  ///Submituserplayer\n  public Submit(userObject) {\n    var userPlayerId = userObject.userPlayerId\n    if (userPlayerId == \"\" || userPlayerId == undefined) {\n      this.createUser(userObject);\n    }\n    else {\n      this.updateUser(userObject);\n    }\n  }\n\n  closeDialog() {\n    this.dialog.closeAll();\n  }\n\n  onSelectionChange(event: MatSelectChange) {\n    this.selectedPlayerIds = event.value;\n    this.cdr.detectChanges();\n  }\n\n  //Create new user\n  public createUser(formData) {\n    let selectedPlayerIds = formData.playername;\n    let playerIdString = selectedPlayerIds.join(\",\");\n\n    let AdduserplayerModel: addedituserplayer = {\n      \"userId\": formData.username.userId,\n      \"userPlayerIds\": playerIdString,\n      \"uncheckedPlayerIds\": \"\",\n    }\n\n    this.appService.AddUserPlayer('api/UserPlayer/AddUserPlayer', AdduserplayerModel).subscribe(data => {\n      this.closeDialog();\n      const dialogRef = this.dialog.open(OkDialogComponent, {\n        maxWidth: \"500px\",\n        disableClose: true,\n\n        data: {\n          title: \"Save Action\",\n          message: \"User Player Added Successfully!\"\n        }\n\n      });\n      dialogRef.afterClosed().subscribe(() => {\n        this.router.navigate(['/admin/superadmin/listuserplayer'], { relativeTo: this.route });\n        window.location.reload();\n      });\n    },);\n  }\n\n  ///Getuserlist for dropdown without superadmin user\n  public getUserList() {\n    this.appService.getUserList('api/user/GetOtherUser').subscribe(data => {\n      this.UserList = data;\n    });\n  }\n\n  onBackdropClick(event: MouseEvent) {\n    // prevent dialog close on backdrop click\n    event.stopPropagation();\n  }\n\n  ///update existing user\n  private updateUser(formData) {\n    const unselectedPlayerIds = this.MappedPlayerList\n      .filter(player => !this.EditselectedPlayerIds.includes(player.playerId))\n      .map(player => player.playerId);\n\n    const unselectedPlayerIdsString = unselectedPlayerIds.join(',');\n\n    let EdituserplayerModel: edituserplayer = {\n      \"userId\": formData.username,\n      \"uncheckedPlayerIds\": unselectedPlayerIdsString,\n    }\n\n    this.appService.edituserplayer('api/UserPlayer/EditUserPlayer', EdituserplayerModel).subscribe(data => {\n      this.closeDialog();\n      const dialogRef = this.dialog.open(OkDialogComponent, {\n        maxWidth: \"500px\",\n        disableClose: true,\n\n        data: {\n          title: \"Edit Action\",\n          message: \"User Player Updated Successfully!\"\n        }\n\n      });\n      dialogRef.afterClosed().subscribe(() => {\n        window.location.reload();\n        this.router.navigate(['/admin/superadmin/listuserplayer'], { relativeTo: this.route });\n      });\n    }, error => {\n      this.snackBar.open('Something went wrong!', '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n    });\n  }\n\n  ///GetUserById\n  public getuserbyId(Uid) {\n    if (Uid > 0) {\n      this.appService.getById(\"api/UserPlayer/GetuserplayerByUserplayerId/\", Uid).subscribe(data => {\n        this.uploadForm.controls['userPlayerId'].setValue(Uid);\n        this.uploadForm.controls['username'].setValue(data.userId);\n        this.appService.getById(\"api/UserPlayer/GetPlayerByUserId/\", data.userId).subscribe(data => {\n          this.MappedPlayerList = data;\n          this.EditselectedPlayerIds = this.MappedPlayerList.map(player => player.playerId);\n        });\n      });\n    }\n  }\n\n  isReadOnly(): boolean {\n    return true;\n  }\n\n}\n","<h2 class=\"mat-dialog-title\">{{ uploadForm.value.userPlayerId ? 'Edit' : 'Add' }} Player</h2>\n<mat-dialog-content class=\"mat-typography\">\n\n    <form [formGroup]=\"uploadForm\">\n\n        <div fxLayout=\"column\" class=\"container\">\n            <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\" class=\"block-2\">\n\n                <div fxFlex.gt-sm=\"50%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill class=\"grid-item\">\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\n                        <mat-label>User</mat-label>\n                        <mat-select formControlName=\"username\" required (selectionChange)=\"onChangeUser($event)\">\n\n                            <ng-container *ngIf=\"!uploadForm.value.userPlayerId\">\n                                <mat-option *ngFor=\"let username of UserList\"\n                                    [value]=\"{ userId: username.userId, roleId: username.roleId }\">\n                                    <span>{{username.fullName}} ({{ username.name }})</span>\n                                </mat-option>\n                            </ng-container>\n\n                            <!-- for edit -->\n                            <ng-container *ngIf=\"uploadForm.value.userPlayerId\">\n                                <mat-option *ngFor=\"let username of UserList\" [value]=\"username.userId\"\n                                    [disabled]=\"isReadOnly()\">\n                                    <span>{{username.fullName}} ({{ username.name }})</span>\n                                </mat-option>\n                            </ng-container>\n\n                        </mat-select>\n\n                        <mat-error *ngIf=\"uploadForm.controls.username.errors?.required\">Please select\n                            User</mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div fxFlex.gt-sm=\"50%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill class=\"grid-item\">\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\n                        <mat-label>Player Name</mat-label>\n\n                        <mat-select *ngIf=\"!uploadForm.value.userPlayerId\" formControlName=\"playername\" multiple\n                            required [value]=\"userPlayerId\" (selectionChange)=\"onSelectionChange($event)\">\n                            <mat-option *ngFor=\"let playername of PlayerList\" [value]=\"playername.playerId\">\n                                <span>{{playername.fullName}}</span>\n                            </mat-option>\n                        </mat-select>\n\n                        <!-- for edit -->\n                        <mat-select *ngIf=\"uploadForm.value.userPlayerId\" formControlName=\"playername\"\n                            [(ngModel)]=\"EditselectedPlayerIds\" multiple required>\n                            <mat-option *ngFor=\"let player of MappedPlayerList\" [value]=\"player.playerId\"\n                                (change)=\"updateSelectedPlayerIds(player.playerId)\">\n                                <span>{{player.fullName}}</span>\n                            </mat-option>\n                        </mat-select>\n\n                        <mat-error *ngIf=\"uploadForm.controls.playername.errors?.required\">Please select\n                            Player Name</mat-error>\n                    </mat-form-field>\n                </div>\n\n                <!-- hiddenfield -->\n                <input formControlName=\"userPlayerId\" matInput hidden>\n\n            </div>\n        </div>\n\n    </form>\n\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <div fxFlex=\"50%\" class=\"text-left\">\n        <button (click)=\"closeDialog()\" mat-raised-button color=\"accent\" type=\"button\" class=\"crbtn\"> <i\n                class=\"fa fa-ban\" aria-hidden=\"true\"></i> CANCEL</button>\n        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!uploadForm.valid || !isPlayerSelected\"\n            (click)=\"Submit(uploadForm.value)\" class=\"crbtn\"><i class=\"fa fa-floppy-o\" aria-hidden=\"true\"></i> {{\n            uploadForm.value.userPlayerId ? 'UPDATE' :\n            'SUBMIT'}}</button>\n    </div>\n    <div fxFlex=\"50%\" class=\"text-right\">\n        <h4 class=\"crdtip\">Tip : (*) fields are mandatory.</h4>\n    </div>\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p><br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Super Admin Dashboard</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AppService } from 'src/app/app.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AppSettings, Settings } from 'src/app/app.settings';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-listuser',\n  templateUrl: './listuser.component.html',\n  styleUrls: ['./listuser.component.css']\n})\n\nexport class ListuserComponent implements OnInit {\n\n  public UserList: any = [];\n  public NewUserList: any = [];\n  public settings: Settings;\n  public page: any;\n  public count = 8;\n  userId: string | any;\n  public username: any;\n  public fullName: any;\n  public searchterm: any;\n  public mobileNo: any;\n  public searchText: string;\n\n  constructor(public appService: AppService, public dialog: MatDialog, public snackBar: MatSnackBar, private tokenStorage: TokenStorageService, public router: Router, public appSettings: AppSettings) {\n    this.settings = this.appSettings.settings;\n\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        if (event.url.includes('/addedituser')) {\n        }\n      });\n  }\n\n  ngOnInit(): void {\n    this.getUserList();\n  }\n\n  public getUserList() {\n    this.appService.getUserList('api/User/GetAllUser').subscribe(data => {\n      this.UserList = data;\n      this.NewUserList = data;\n    });\n  }\n\n  ///Search\n  Search() {\n    if (this.username === \"\") {\n      this.getUserList();\n    }\n    else {\n\n      this.UserList = this.NewUserList.filter(res => {\n        return (\n          res.fullName.toLocaleLowerCase().includes(this.username.toLocaleLowerCase()) ||\n          res.emailId.toLocaleLowerCase().includes(this.username.toLocaleLowerCase()) ||\n          res.name.toLocaleLowerCase().includes(this.username.toLocaleLowerCase()) ||\n          res.mobileNo.includes(this.username)\n        );\n      });\n      this.page = 1;\n    }\n  }\n\n  ///pagination\n  public onPageChanged(event) {\n    this.page = event;\n    window.scrollTo(0, 0);\n  }\n\n  ///Delete User\n  public deleteservice(user: any) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"400px\",\n      disableClose: true,\n\n      data: {\n        title: \"Confirm Action\",\n        message: \"Are you sure you want delete this user?\"\n      }\n\n    });\n\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if (dialogResult) {\n        const index: number = this.UserList.indexOf(user);\n        if (index !== -1) {\n          this.UserList.splice(index, 1);\n          this.appService.deleteuser(`api/user/DeleteUser?userId=${user.userId}`, {}).subscribe(data => {\n          });\n        }\n      }\n    });\n  }\n}\n","<div class=\"p-1\">\n    <mat-card class=\"p-0\">\n\n        <div fxLayout=\"row wrap \" fxLayoutAlign=\"space-between\" class=\"w-100 p-2 crdhead\">\n            <h2><i class=\"fa fa-bars\" aria-hidden=\"true\"></i>&nbsp; User List</h2>\n            <table class=\"tblsearch\">\n                <tr>\n                    <td class=\"tdsearch\"> <span class=\"fa fa-search searchtext-icon\"></span>\n                        <input matInput type=\"text\" class=\"searchtext\" placeholder=\"Search...\" name=\"username\"\n                            [(ngModel)]=\"username\" (input)=\"Search()\">\n                    </td>\n\n                    <td class=\"tdbtn\">\n                        <button mat-raised-button color=\"primary\" class=\"crbtn\" type=\"button\"\n                            [routerLink]=\"['../addedituser']\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i>&nbsp;\n                            ADD</button>\n                    </td>\n                </tr>\n            </table>\n\n        </div>\n        <mat-divider></mat-divider>\n        <div class=\"mat-table admin-table\">\n\n            <div class=\"mat-header-row\">\n                <div class=\"mat-header-cell\">Name</div>\n                <div class=\"mat-header-cell\">Email Id</div>\n                <div class=\"mat-header-cell\">Mobile No.</div>\n                <div class=\"mat-header-cell\">Role</div>\n                <div class=\"mat-header-cell text-center\" fxFlex.gt-sm=\"10\">Action</div>\n            </div>\n\n            <div *ngFor=\"let user of UserList | paginate: { itemsPerPage: count, currentPage: page }\" class=\"mat-row\">\n                <div class=\"mat-cell\">{{user.fullName}}</div>\n                <div class=\"mat-cell\">{{user.emailId}}</div>\n                <div class=\"mat-cell\">{{user.mobileNo}}</div>\n                <div class=\"mat-cell\">{{user.name}}</div>\n                <div class=\"mat-cell text-center\" fxFlex.gt-sm=\"10\">\n                    <a [routerLink]=\"['../addedituser',user.userId]\" mat-mini-fab color=\"primary\" matTooltip=\"Edit\"><i\n                            class=\"fa fa-pencil\" aria-hidden=\"true\"></i></a>\n                    <button mat-mini-fab color=\"warn\" matTooltip=\"Delete\" class=\"mx-1\"\n                        (click)=\"deleteservice(user); \"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\n                </div>\n            </div>\n\n        </div>\n        <mat-divider></mat-divider>\n\n        <div *ngIf=\"UserList.length > 0\" fxLayout=\"row wrap\">\n            <div fxFlex=\"100\" class=\"p-1\">\n                <mat-card class=\"p-0 text-center nobxshbrd\">\n                    <pagination-controls class=\"product-pagination\" autoHide=\"true\" maxSize=\"5\"\n                        (pageChange)=\"onPageChanged($event)\"></pagination-controls>\n                </mat-card>\n            </div>\n        </div>\n\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddedituserplayerComponent } from '../addedituserplayer/addedituserplayer.component';\nimport { AppService } from 'src/app/app.service';\nimport { AppSettings, Settings } from 'src/app/app.settings';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\nimport { OkDialogComponent } from 'src/app/shared/ok-dialog/ok-dialog.component';\n\n@Component({\n  selector: 'app-listuserplayer',\n  templateUrl: './listuserplayer.component.html',\n  styleUrls: ['./listuserplayer.component.css']\n})\n\nexport class ListuserplayerComponent implements OnInit {\n  public UserList: any = [];\n  public allUserList: any = [];\n  public PlayerList: any = [];\n  public settings: Settings;\n  public page: any;\n  public count = 8;\n  userId: string | any;\n  public List: any\n  public userPlayerId: any\n  public ThisUserplayer: any\n  public username: any;\n  public userList: any = [];\n  public NewuserList: any = [];\n\n  constructor(public appService: AppService, public dialog: MatDialog, public snackBar: MatSnackBar, private tokenStorage: TokenStorageService, public router: Router, public appSettings: AppSettings) {\n    this.settings = this.appSettings.settings;\n  }\n\n  uploadForm = new FormGroup({\n    userPlayerId: new FormControl('', []),\n    username: new FormControl('', [Validators.required]),\n    playername: new FormControl('', [Validators.required]),\n  });\n\n  ngOnInit(): void {\n    this.getUserList();\n    this.playerList();\n    this.getallUserList();\n  }\n\n  ///Searchbox\n  Search() {\n    if (this.username == \"\") {\n      this.getUserList();\n    }\n    else {\n      this.UserList = this.NewuserList.filter(res => {\n        return (\n          res.userFullName.toLocaleLowerCase().includes(this.username.toLocaleLowerCase()) ||\n          res.roleName.toLocaleLowerCase().includes(this.username.toLocaleLowerCase()) ||\n          res.fullName.toLocaleLowerCase().includes(this.username.toLocaleLowerCase())\n        );\n      });\n      this.page = 1;\n    }\n  }\n\n  ///Pagination\n  public onPageChanged(event) {\n    this.page = event;\n    window.scrollTo(0, 0);\n  }\n\n  ///list all userplayer\n  public getUserList() {\n    this.appService.GetAllUserPlayer('api/userplayer/GetAllUserPlayer').subscribe(data => {\n      this.UserList = data;\n      this.NewuserList = data;\n      // this.groupUsers();\n    });\n  }\n\n  /// show Player by group\n  // private groupUsers() {\n  //   const groupedUsers = this.UserList.reduce((acc, curr) => {\n  //     if (!acc[curr.emailId]) {\n  //       acc[curr.emailId] = { emailId: curr.emailId, userPlayerIds: [curr.userPlayerId], fullNames: [curr.fullName] };\n  //     } else {\n  //       acc[curr.emailId].fullNames.push(curr.fullName);\n  //       acc[curr.emailId].userPlayerIds.push(curr.userPlayerId);\n  //     }\n  //     return acc;\n  //   }, {});\n  //   this.userList = Object.values(groupedUsers);\n  // }\n\n  ///GetAllUser\n  public getallUserList() {\n    this.appService.getUserList('api/User/GetAllUser').subscribe(data => {\n      this.allUserList = data;\n    });\n  }\n\n  openDialog(userPlayerId: any): void {\n    this.userPlayerId = userPlayerId\n    // this.getuserbyId(this.userPlayerId);\n    const dialogRef = this.dialog.open(AddedituserplayerComponent, {\n      width: '100vh',\n      disableClose: true,\n\n      data: { userPlayerId: userPlayerId }\n    });\n  }\n\n  ///GetAllPlayerDetail\n  public playerList() {\n    this.appService.getAllPlayerDetail('api/PlayerDetail/GetAllPlayerDetail').subscribe(data => {\n\n      this.PlayerList = data;\n    });\n  }\n\n  ///delete userplayer\n  public deleteservice(user: any) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"400px\",\n      disableClose: true,\n\n      data: {\n        title: \"Confirm Action\",\n        message: \"Are you sure you want delete user and player mapping?\"\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if (dialogResult) {\n        const index: number = this.UserList.indexOf(user);\n        if (index !== -1) {\n          this.UserList.splice(index, 1);\n\n          const dialogRef = this.dialog.open(OkDialogComponent, {\n            maxWidth: \"500px\",\n            disableClose: true,\n\n            data: {\n              title: \"Delete Action\",\n              message: \"User and Player Mapping Deleted Successfully!\"\n            }\n\n          });\n\n          this.appService.deleteuser(`api/UserPlayer/DeleteUserPlayer?userplayerId=${user.userPlayerId}`, {}).subscribe(data => {\n          });\n        }\n      }\n    });\n  }\n\n}\n\nexport class DialogOverviewExampleDialog {\n  userPlayerId: string | any;\n  public settings: Settings;\n  constructor(public appService: AppService, public dialog: MatDialog, public snackBar: MatSnackBar, private tokenStorage: TokenStorageService, public router: Router, public appSettings: AppSettings\n  ) {\n    this.settings = this.appSettings.settings;\n  }\n}\n","<div class=\"p-1\">\n    <mat-card class=\"p-0\">\n\n        <div fxLayout=\"row wrap \" fxLayoutAlign=\"space-between center\" class=\"w-100 p-2 crdhead\">\n\n            <h2><i class=\"fa fa-bars\" aria-hidden=\"true\"></i>&nbsp; User Player List</h2>\n\n            <table class=\"tblsearch\">\n                <tr>\n                    <td class=\"tdsearch\"> <span class=\"fa fa-search searchtext-icon\"></span>\n                        <input matInput type=\"text\" class=\"searchtext\" placeholder=\"Search...\" name=\"username\"\n                            [(ngModel)]=\"username\" (input)=\"Search()\" (keyup)=\"Search()\" (ngModelChange)=\"Search()\">\n                    </td>\n                    <td class=\"tdbtn\">\n                        <button mat-raised-button color=\"primary\" type=\"button\" (click)=\"openDialog(null)\"\n                            class=\"crbtn\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i>&nbsp; ADD</button>\n                    </td>\n                </tr>\n            </table>\n\n        </div>\n\n        <mat-divider></mat-divider>\n\n        <div class=\"mat-table admin-table\">\n\n            <div class=\"mat-header-row\">\n                <div class=\"mat-header-cell\" fxFlex=\"40%\">User</div>\n                <div class=\"mat-header-cell\" fxFlex=\"40%\">Player Name</div>\n                <div class=\"mat-header-cell text-center\" fxFlex=\"20%\">Action</div>\n            </div>\n\n            <div *ngFor=\"let user of UserList | paginate: { itemsPerPage: count, currentPage: page }\" class=\"mat-row\">\n                <div class=\"mat-cell\" fxFlex=\"40%\">{{user.userFullName}} ({{user.roleName}})</div>\n                <div class=\"mat-cell\" fxFlex=\"40%\">{{user.fullName}}</div>\n                <div class=\"mat-cell text-center\" fxFlex=\"20%\">\n                    <a (click)=\"openDialog(user.userPlayerId)\" mat-mini-fab color=\"primary\" matTooltip=\"Edit\"><i\n                            class=\"fa fa-pencil\" aria-hidden=\"true\"></i></a>\n                    <button (click)=\"deleteservice(user); \" mat-mini-fab color=\"warn\" matTooltip=\"Delete\"\n                        class=\"mx-1\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\n                </div>\n            </div>\n\n        </div>\n\n        <mat-divider></mat-divider>\n        <div *ngIf=\"UserList.length > 0\" fxLayout=\"row wrap\">\n            <div fxFlex=\"100\" class=\"p-1\">\n                <mat-card class=\"p-0 text-center nobxshbrd\">\n                    <pagination-controls class=\"product-pagination\" autoHide=\"true\" maxSize=\"5\"\n                        (pageChange)=\"onPageChanged($event)\"></pagination-controls>\n                </mat-card>\n            </div>\n        </div>\n    </mat-card>\n\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { ListuserComponent } from './listuser/listuser.component';\nimport { AddedituserComponent } from './addedituser/addedituser.component';\nimport { ListuserplayerComponent } from './listuserplayer/listuserplayer.component';\nimport { AddedituserplayerComponent } from './addedituserplayer/addedituserplayer.component';\nimport { addedituserplayer } from './addedituserplayer/addedituserplayer.Model';\nimport { FormsModule } from '@angular/forms';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatSelectModule } from '@angular/material/select';\nimport { AuthGuard } from 'src/auth.guard';\n\nexport const routes = [\n  { path: '', redirectTo: 'user', pathMatch: 'full' },\n  { path: 'addedituser', component: AddedituserComponent ,canActivate: [AuthGuard], allowedRoles: [1] },\n  { path: 'addedituser/:id', component: AddedituserComponent ,canActivate: [AuthGuard], allowedRoles: [1]},\n  { path: 'listuser', component: ListuserComponent ,canActivate: [AuthGuard], allowedRoles: [1]},\n  { path: 'addedituserplayer', component: addedituserplayer ,canActivate: [AuthGuard], allowedRoles: [1]},\n  { path: 'addedituserplayer/:id', component: addedituserplayer ,canActivate: [AuthGuard], allowedRoles: [1]},\n  { path: 'listuserplayer', component: ListuserplayerComponent ,canActivate: [AuthGuard], allowedRoles: [1]},\n  { path: 'admin/superadmin/listuser', component: ListuserplayerComponent ,canActivate: [AuthGuard], allowedRoles: [1]},\n  { path: 'dashboard', component: DashboardComponent ,canActivate: [AuthGuard], allowedRoles: [1]},\n];\n\n@NgModule({\n\n  declarations: [\n    ListuserComponent,\n    AddedituserComponent,\n    ListuserplayerComponent,\n    AddedituserplayerComponent,\n    DashboardComponent\n  ],\n\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    SharedModule,\n    NgxPaginationModule,\n    FormsModule,\n    FormsModule,\n    MatOptionModule,\n    MatSelectModule\n  ]\n\n})\nexport class SuperadminModule { }\n"],"names":[],"sourceRoot":"webpack:///"}