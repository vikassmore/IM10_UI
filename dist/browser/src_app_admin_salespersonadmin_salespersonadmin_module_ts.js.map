{"version":3,"file":"src_app_admin_salespersonadmin_salespersonadmin_module_ts.js","mappings":"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","sources":["./src/app/admin/salespersonadmin/addeditadvertiseaddson/addeditadvertiseaddson.component.ts","./src/app/admin/salespersonadmin/addeditadvertiseaddson/addeditadvertiseaddson.component.html","./src/app/admin/salespersonadmin/addeditadvertisecontent/addeditadvertisecontent.component.ts","./src/app/admin/salespersonadmin/addeditadvertisecontent/addeditadvertisecontent.component.html","./src/app/admin/salespersonadmin/addeditlisting/addeditlisting.component.ts","./src/app/admin/salespersonadmin/addeditlisting/addeditlisting.component.html","./src/app/admin/salespersonadmin/dashboard/dashboard.component.ts","./src/app/admin/salespersonadmin/dashboard/dashboard.component.html","./src/app/admin/salespersonadmin/listadvertiseaddson/listadvertiseaddson.component.ts","./src/app/admin/salespersonadmin/listadvertiseaddson/listadvertiseaddson.component.html","./src/app/admin/salespersonadmin/listadvertisecontent/listadvertisecontent.component.ts","./src/app/admin/salespersonadmin/listadvertisecontent/listadvertisecontent.component.html","./src/app/admin/salespersonadmin/listlisting/listlisting.component.ts","./src/app/admin/salespersonadmin/listlisting/listlisting.component.html","./src/app/admin/salespersonadmin/salespersonadmin.module.ts","./src/app/admin/salespersonadmin/startingpage/startingpage.component.ts","./src/app/admin/salespersonadmin/startingpage/startingpage.component.html"],"sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AppService } from 'src/app/app.service';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { OkDialogComponent } from 'src/app/shared/ok-dialog/ok-dialog.component';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { addadvcontent } from './addeditadvertiseaddson.Model';\nimport { editadvcontent } from './addeditadvertiseaddson.Model';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-addeditadvertiseaddson',\n  templateUrl: './addeditadvertiseaddson.component.html',\n  styleUrls: ['./addeditadvertiseaddson.component.css']\n})\n\nexport class AddeditadvertiseaddsonComponent implements OnInit {\n  public ContentList: any = [];\n  public AdvtContentList: any = [];\n  advContentMapId: any;\n  public formdata = {};\n  public CategoryList = [];\n  public SubCategoryList = [];\n  subcategory: any = [];\n  public categoryId: any\n  public subCategoryId: any\n\n  uploadForm = new FormGroup({\n    advContentMapId: new FormControl(),\n    contentId: new FormControl('', [Validators.required]),\n    advertiseContentId: new FormControl('', [Validators.required]),\n    categoryId: new FormControl({ value: '', disabled: true }, [Validators.required]),\n    subCategoryId: new FormControl({ value: '', disabled: true }, [Validators.required]),\n    position: new FormControl('', [Validators.required]),\n  });\n\n  constructor(private snackBar: MatSnackBar ,public dialog: MatDialog, @Inject(MAT_DIALOG_DATA) public data: any, public appService: AppService, public router: Router, private route: ActivatedRoute,) { }\n\n  closeDialog() {\n    this.dialog.closeAll(); // <- Close the mat dialog\n  }\n\n  ngOnInit(): void {\n    var advContentMapId = this.data.advContentMapId\n    this.getAdvaddlistbyid(this.data.advContentMapId);\n    this.getContentDetailsListByPlayetId();\n    this.getAdvtContentDetailsListByPlayetId();\n    this.getCategoryMaster();\n  }\n\n  ///getContentDetailsListByPlayetId\n  public getContentDetailsListByPlayetId() {\n    var playerId = window.sessionStorage.getItem(\"playerId\")\n    this.appService.getContentByPlayerId(\"api/ContentDetail/GetApprovedContentdetailByPlayerId/\", playerId).subscribe(data => {\n      this.ContentList = data;\n    });\n  }\n\n  ///GetAdvContentByPlayerId\n  public getAdvtContentDetailsListByPlayetId() {\n    var playerId = window.sessionStorage.getItem(\"playerId\")\n    this.appService.getAdvtContentByPlayerId(\"api/AdvtContentDetail/GetApprovedAdvContentByPlayerId/\", playerId).subscribe(data => {\n      this.AdvtContentList = data;\n    });\n  }\n\n  ///getallcategoryfordropdown\n  public getCategoryMaster() {\n    this.appService.getAllCategory(\"api/MasterAPIs/GetAllCategory\").subscribe(data => {\n      this.CategoryList = data;\n    });\n  }\n\n  // Get GetSubcat Method\n  public GetSubcat(categoryId) {\n    if (categoryId == undefined) {\n      categoryId == 1;\n    }\n    this.appService.getStateById(\"api/MasterAPIs/GetSubcategoryByCategoryId/\" + categoryId).subscribe((data: any) => {\n      this.SubCategoryList = data;\n    })\n  }\n\n  ///Validation for only enter number\n  keyPressOnlynum(event) {\n    var inp = String.fromCharCode(event.keyCode);\n    if (/[0-9]/.test(inp)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n\n  ///Submit\n  public Submit(userObject) {\n    var advContentMapId = userObject.advContentMapId\n    if (advContentMapId == \"\" || advContentMapId == undefined) {\n      this.AddAdvtAddsOn(userObject);\n    }\n    else {\n      if (this.uploadForm.valid) {\n        this.UpdateAdd(userObject);\n      }\n    }\n  }\n\n  ///AddAdvtAddsOn\n  public AddAdvtAddsOn(formData) {\n    let addadvcontentModel: addadvcontent = {\n      \"contentId\": formData.contentId,\n      \"advertiseContentId\": formData.advertiseContentId,\n      \"categoryId\": this.uploadForm.controls['categoryId'].value,\n      \"subCategoryId\": this.uploadForm.controls['subCategoryId'].value,\n      \"position\": formData.position,\n    }\n\n    this.appService.AddContentUpdate('api/AdvContentMapping/AddAdvContentMapping', addadvcontentModel).subscribe(() => {\n      \n      this.closeDialog();\n      const dialogRef = this.dialog.open(OkDialogComponent, {\n        maxWidth: \"500px\",\n        disableClose: true,\n\n        data: {\n          title: \"Save Action\",\n          message: \"Advertise Ads On Added Successfully!\"\n        }\n\n      }\n      );\n      dialogRef.afterClosed().subscribe(() => {\n        window.location.reload();\n      });\n      this.router.navigate(['/admin/salespersonadmin/listadvertiseaddson'], { relativeTo: this.route });\n    }, error => {\n      if (error.status === 409) {\n        // Handle the case where the email already exists\n        this.snackBar.open(error.error, '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n    }\n    });\n  }\n\n  ///UpdateAdd\n  public UpdateAdd(formData) {\n    let editadvcontentModel: editadvcontent = {\n      \"advContentMapId\": formData.advContentMapId,\n      \"contentId\": formData.contentId,\n      \"advertiseContentId\": formData.advertiseContentId,\n      \"categoryId\": this.uploadForm.controls['categoryId'].value,\n      \"subCategoryId\": this.uploadForm.controls['subCategoryId'].value,\n      \"position\": formData.position,\n    }\n\n    this.appService.AddContentUpdate('api/AdvContentMapping/AddAdvContentMapping', editadvcontentModel).subscribe(() => {\n      this.closeDialog();\n      const dialogRef = this.dialog.open(OkDialogComponent, {\n        maxWidth: \"500px\",\n        disableClose: true,\n\n        data: {\n          title: \"Edit Action\",\n          message: \"Advertise Ads On Updated Successfully!\"\n        }\n\n      }\n      );\n      dialogRef.afterClosed().subscribe(() => {\n        window.location.reload();\n      });\n      this.router.navigate(['/admin/salespersonadmin/listadvertiseaddson'], { relativeTo: this.route });\n    }, error => {\n      if (error.status === 409) {\n        // Handle the case where the email already exists\n        this.snackBar.open(error.error, '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n    }\n    });\n  }\n\n  ///GetAdvContentMappingByadvContentMapId\n  public getAdvaddlistbyid(advContentMapId) {\n    if (advContentMapId > 0) {\n      this.appService.getById(\"api/AdvContentMapping/GetAdvContentMappingById/\", advContentMapId).subscribe(data => {\n        this.uploadForm.controls['categoryId'].setValue(data.categoryId);\n\n        this.GetSubcat(data.categoryId);\n\n        this.uploadForm.controls['advertiseContentId'].setValue(data.advertiseContentId);\n        this.uploadForm.controls['subCategoryId'].setValue(data.subCategoryId);\n        this.uploadForm.controls['contentId'].setValue(data.contentId);\n        this.uploadForm.controls['position'].setValue(data.position);\n        this.uploadForm.controls['advContentMapId'].setValue(advContentMapId);\n      });\n    }\n  }\n\n  public onChangeContent(event) {\n    if (event.value) {\n      let Contentid = event.value;\n      this.appService.getStateById(\"api/ContentDetail/GetContentDetailById/\" + Contentid).subscribe(\n        data => {\n          this.uploadForm.controls['categoryId'].setValue(data.categoryId);\n          this.GetSubcat(data.categoryId);\n          this.uploadForm.controls['subCategoryId'].setValue(data.subCategoryId);\n        }\n      );\n    }\n  }\n\n}","<h2 class=\"mat-dialog-title\">{{ uploadForm.value.advContentMapId ? 'Edit' : 'Add' }} Advertise Ads On</h2>\n\n<mat-dialog-content class=\"mat-typography\">\n\n    <form [formGroup]=\"uploadForm\">\n\n        <div fxLayout=\"column\" class=\"container\">\n\n            <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\" class=\"block-2\">\n                <div fxFlex.gt-sm=\"50%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill class=\"grid-item\">\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\n                        <mat-label>Content Title</mat-label>\n                        <mat-select formControlName=\"contentId\" required (selectionChange)=\"onChangeContent($event)\">\n                            <mat-option *ngFor=\"let content of ContentList\" [value]=\"content.contentId\">\n                                <span>{{content.title}}</span>\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"uploadForm.controls.contentId.errors?.required\">Please select\n                            Content Title</mat-error>\n                    </mat-form-field>\n                </div>\n                <div fxFlex.gt-sm=\"50%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill class=\"grid-item\">\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\n                        <mat-label>Advertise Content Name </mat-label>\n                        <mat-select formControlName=\"advertiseContentId\" required>\n                            <mat-option *ngFor=\"let content of AdvtContentList\" [value]=\"content.advertiseContentId\">\n                                <span>{{content.title}}</span>\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"uploadForm.controls.contentId.errors?.required\">Please select\n                            Advertise Content Name</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\" class=\"block-2 mttop20\">\n                <div fxFlex.gt-sm=\"50%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill class=\"grid-item\">\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\n                        <mat-label>Category </mat-label>\n                        <mat-select formControlName=\"categoryId\" required>\n                            <mat-option *ngFor=\"let category of CategoryList\" [value]=\"category.categoryId\">\n                                <span>{{category.name}}</span>\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"uploadForm.controls.categoryId.errors?.required\">Please select\n                            Category</mat-error>\n                    </mat-form-field>\n                </div>\n                <div fxFlex.gt-sm=\"50%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill class=\"grid-item\">\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\n                        <mat-label>Sub-Category </mat-label>\n                        <mat-select formControlName=\"subCategoryId\" required>\n                            <mat-option *ngFor=\"let subcategory of SubCategoryList\" [value]=\"subcategory.subCategoryId\">\n                                <span>{{subcategory.name}}</span>\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"uploadForm.controls.subCategoryId.errors?.required\">Please select\n                            Sub-Category</mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\" class=\"block-2 mttop20\">\n                <div fxFlex.gt-sm=\"50%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill class=\"grid-item\">\n                    <mat-form-field appearance=\"outline\" class=\"w-100\">\n                        <mat-label>Position </mat-label>\n                        <input (keypress)=\"keyPressOnlynum($event)\" maxlength=\"4\" formControlName=\"position\" required\n                            pattern=\"[0-9 ]+\" matInput required>\n                        <mat-error *ngIf=\" uploadForm.controls.position.errors?.required\">Please enter position\n                            number</mat-error>\n\n                    </mat-form-field>\n                </div>\n\n                <!-- hiddenfield -->\n                <input formControlName=\"advContentMapId\" matInput hidden>\n\n                <div fxFlex.gt-sm=\"50%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill class=\"grid-item\">\n                </div>\n            </div>\n\n        </div>\n\n    </form>\n\n</mat-dialog-content>\n\n<mat-dialog-actions>\n\n    <div fxFlex=\"50%\" class=\"text-left\">\n        <button (click)=\"closeDialog()\" mat-raised-button color=\"accent\" type=\"button\" class=\"crbtn\"> <i\n                class=\"fa fa-ban\" aria-hidden=\"true\"></i> CANCEL</button>\n        <button [disabled]=\"!uploadForm.valid\" (click)=\"Submit(uploadForm.value)\" mat-raised-button color=\"primary\"\n            type=\"submit\" class=\"crbtn\"><i class=\"fa fa-floppy-o\" aria-hidden=\"true\"></i>\n            {{uploadForm.value.advContentMapId ? 'UPDATE' : 'SUBMIT'\n            }}</button>\n    </div>\n    <div fxFlex=\"50%\" class=\"text-right\">\n        <h4 class=\"crdtip\">Tip : (*) fields are mandatory.</h4>\n    </div>\n</mat-dialog-actions>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AppService } from 'src/app/app.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { OkDialogComponent } from 'src/app/shared/ok-dialog/ok-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-addeditadvertisecontent',\n  templateUrl: './addeditadvertisecontent.component.html',\n  styleUrls: ['./addeditadvertisecontent.component.css']\n})\n\nexport class AddeditadvertisecontentComponent implements OnInit {\n  advertiseContentId: string | any;\n  public country = [];\n  public StateList = [];\n  public CityList = [];\n  public ContenttypeList = [];\n  states: any = [];\n  cities: any[];\n  StateId: string | any;\n  playerId: string | any;\n  CountrytId: string | any;\n  CitiesId: string | any;\n  isFree: boolean = false;\n  isGlobal: boolean = false;\n  public formdata = {};\n  approved: any;\n  invalidfileType=false;\n  isDeleted: any;\n  advertiseFilePath?: FileList;\n  fileError: boolean = false;\n  fileSizeError = false;\n  selectedFile: File = null;\n  startDateFormatted: any;\n  endDateFormatted: any;\n  isFileUploaded: boolean = false;\n  file: any;\n  public showtitleerror : boolean=false;\n\n  uploadForm = new FormGroup({\n    advertiseContentId: new FormControl('', []),\n    title: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]),\n    finalPrice: new FormControl('', [Validators.required]),\n    nationId: new FormControl('', [Validators.required]),\n    stateId: new FormControl('', [Validators.required]),\n    cityId: new FormControl('', [Validators.required]),\n    contentTypeId: new FormControl('', [Validators.required]),\n    startDate: new FormControl('', [Validators.required]),\n    endDate: new FormControl('', [Validators.required]),\n    isFree: new FormControl(),\n    isGlobal: new FormControl(),\n    advertiseFilePath: new FormControl(),\n  });\n\n  constructor(public dialog: MatDialog, public appService: AppService, public snackBar: MatSnackBar, private route: ActivatedRoute, private router: Router, public formBuilder: FormBuilder,) { }\n\n  ngOnInit(): void {\n    this.advertiseContentId = this.route.snapshot.params['id'];\n    this.getNationMaster();\n    this.getContenttypenameMaster();\n\n    this.getcontentbyId(this.advertiseContentId)\n  }\n\n  getFileExtension(filename: string): string {\n    return filename.split('.').pop()?.toLowerCase() || '';\n  }\n  ///Select file\n  handleFileSelect(event: any) {\n    this.file = event.target.files[0];\n    if (!this.file) {\n      this.selectedFile = null;\n      return;\n    }\n    const maxFileSize = 50000000;\n    if (this.file.size > maxFileSize) {\n      this.fileSizeError = true;\n      return;\n    }\n    const allowedExtensions = ['mp4', 'jpg', 'jpeg', 'png'];\n    const fileExtension = this.getFileExtension(this.file.name);\n  \n    if (!allowedExtensions.includes(fileExtension)) {\n      // Invalid file type\n      this.invalidfileType=true;\n      this.isFileUploaded=true;\n      return;\n    }\n    if (this.file) {\n      this.selectedFile = this.file;\n      this.isFileUploaded = true;\n      this.fileSizeError = false;\n      this.invalidfileType=false;\n\n      setTimeout(() => {\n        this.isFileUploaded = false;\n      },);\n    }\n    this.updateSubmitButtonState();\n  }\n\n  ///Validation for only enter number\n  keyPressOnlynum(event) {\n    var inp = String.fromCharCode(event.keyCode);\n    if (/[0-9]/.test(inp)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n\n  ///Submit\n  public Submit(userObject) {\n    if (this.advertiseContentId == \"\" || this.advertiseContentId == undefined) {\n      this.createAdvContent(this.formdata);\n    }\n    else {\n      if (this.uploadForm.valid) {\n        this.updateAdvContent(userObject);\n      }\n    }\n  }\n\n\n  isSubmitDisabled(): boolean {\n    debugger\n    return !this.uploadForm.valid ||  !this.selectedFile ;\n}\n\n\nsubmitDisabled: boolean = true;\nupdateSubmitButtonState() {\n  debugger\n  this.submitDisabled = this.isSubmitDisabled();\n}\n\n\n///check validation for blank space\ntitlekeyDown(event: KeyboardEvent) {\n  const inputValue = (event.target as HTMLInputElement).value;\n\n  // Check if the input consists only of spaces\n  const isOnlySpaces = /^\\s*$/.test(inputValue);\n\n  if (event.key === ' ' && isOnlySpaces) \n    {\n    this.showtitleerror = true; // Set the flag to show the error message\n    event.preventDefault(); // Prevent the space character from being inserted\n  } else {\n    this.showtitleerror = false; // Hide the error message for other keys\n  }\n}\n\n  ///Add createAdvContent\n  public createAdvContent(userObject) {\n    var formData = new FormData();\n\n    let startDate = this.uploadForm.get('startDate').value;\n    let endDate = this.uploadForm.get('endDate').value;\n\n    let gmtFormatRegex = /^.{3}\\s.{3}\\s\\d{2}\\s\\d{4}\\s\\d{2}:\\d{2}:\\d{2}\\sGMT\\+\\d{4}\\s\\(.+\\)$/;\n\n    formData.append('title', this.uploadForm.value.title);\n    formData.append('nationId', this.uploadForm.value.nationId);\n    formData.append('stateId', this.uploadForm.value.stateId);\n    formData.append('cityId', this.uploadForm.value.cityId);\n    formData.append('finalPrice', this.uploadForm.value.finalPrice);\n    if (gmtFormatRegex.test(startDate)) {\n      let dateObject = new Date(startDate);\n      let endDateFormatted = `${dateObject.getFullYear()}-${(dateObject.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${dateObject\n          .getDate()\n          .toString()\n          .padStart(2, '0')} ${dateObject\n            .getHours()\n            .toString()\n            .padStart(2, '0')}:${dateObject.getMinutes().toString().padStart(2, '0')}:${dateObject\n              .getSeconds()\n              .toString()\n              .padStart(2, '0')}`;\n      formData.append('startDate', endDateFormatted);\n    }\n\n    if (gmtFormatRegex.test(endDate)) {\n      let dateObject = new Date(endDate);\n      let endDateFormatted = `${dateObject.getFullYear()}-${(dateObject.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${dateObject\n          .getDate()\n          .toString()\n          .padStart(2, '0')} ${dateObject\n            .getHours()\n            .toString()\n            .padStart(2, '0')}:${dateObject.getMinutes().toString().padStart(2, '0')}:${dateObject\n              .getSeconds()\n              .toString()\n              .padStart(2, '0')}`;\n      formData.append('endDate', endDateFormatted);\n    }\n    formData.append('contentTypeId', this.uploadForm.value.contentTypeId);\n    formData.append('advertiseFilePath', this.file);\n    formData.append('isFree', this.isFree.toString());\n    formData.append('isGlobal', this.isGlobal.toString());\n    formData.append('playerId', window.sessionStorage.getItem(\"playerId\"));\n    if (window.sessionStorage.getItem(\"playerId\") != null || window.sessionStorage.getItem(\"playerId\") != undefined) {\n      this.appService.AddAdvContent('api/AdvtContentDetail/AddAdvContentDetail', formData).subscribe(() => {\n\n        const dialogRef = this.dialog.open(OkDialogComponent, {\n          maxWidth: \"500px\",\n          disableClose: true,\n\n          data: {\n            title: \"Save Action\",\n            message: \"Advertise Content Added Successfully!\"\n          }\n        });\n        this.router.navigate(['/admin/salespersonadmin/listadvertisecontent'], { relativeTo: this.route });\n      }, error => {\n        this.snackBar.open('Something went wrong!', '×', { panelClass: 'error', verticalPosition: 'top', duration: 2000 });\n      \n        if (error.status === 404) \n        {\n          this.snackBar.open(error.error, '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n        }\n    });\n    }\n  }\n\n  ///updateAdvContent\n  public updateAdvContent(userObject) {\n    var formData1 = new FormData();\n    let startDate = this.uploadForm.get('startDate').value;\n    let endDate = this.uploadForm.get('endDate').value;\n    let gmtFormatRegex = /^.{3}\\s.{3}\\s\\d{2}\\s\\d{4}\\s\\d{2}:\\d{2}:\\d{2}\\sGMT\\+\\d{4}\\s\\(.+\\)$/;\n\n    formData1.append('advertiseContentId', this.advertiseContentId);\n    formData1.append('title', this.uploadForm.value.title);\n    formData1.append('nationId', this.uploadForm.value.nationId);\n    formData1.append('stateId', this.uploadForm.value.stateId);\n    formData1.append('cityId', this.uploadForm.value.cityId);\n    formData1.append('finalPrice', this.uploadForm.value.finalPrice);\n\n    if (gmtFormatRegex.test(startDate)) {\n      let dateObject = new Date(startDate);\n      let endDateFormatted = `${dateObject.getFullYear()}-${(dateObject.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${dateObject\n          .getDate()\n          .toString()\n          .padStart(2, '0')} ${dateObject\n            .getHours()\n            .toString()\n            .padStart(2, '0')}:${dateObject.getMinutes().toString().padStart(2, '0')}:${dateObject\n              .getSeconds()\n              .toString()\n              .padStart(2, '0')}`;\n      formData1.append('startDate', endDateFormatted);\n    }\n    else {\n      formData1.append('startDate', this.uploadForm.value.startDate);\n    }\n\n    if (gmtFormatRegex.test(endDate)) {\n      let dateObject = new Date(endDate);\n      let endDateFormatted = `${dateObject.getFullYear()}-${(dateObject.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${dateObject\n          .getDate()\n          .toString()\n          .padStart(2, '0')} ${dateObject\n            .getHours()\n            .toString()\n            .padStart(2, '0')}:${dateObject.getMinutes().toString().padStart(2, '0')}:${dateObject\n              .getSeconds()\n              .toString()\n              .padStart(2, '0')}`;\n      formData1.append('endDate', endDateFormatted);\n    }\n\n    else {\n      formData1.append('endDate', this.uploadForm.value.endDate);\n    }\n    formData1.append('contentTypeId', this.uploadForm.value.contentTypeId);\n    formData1.append('isFree', this.uploadForm.value.isFree);\n    formData1.append('isGlobal', this.uploadForm.value.isGlobal);\n    formData1.append('advertiseFilePath', this.file);\n    formData1.append('PlayerId', window.sessionStorage.getItem(\"playerId\"));\n\n    this.appService.AddAdvContent('api/AdvtContentDetail/AddAdvContentDetail', formData1).subscribe(() => {\n      const dialogRef = this.dialog.open(OkDialogComponent, {\n        maxWidth: \"500px\",\n        disableClose: true,\n\n        data: {\n          title: \"Edit Action\",\n          message: \"Content Updated Successfully!\"\n        }\n      });\n      this.router.navigate(['/admin/salespersonadmin/listadvertisecontent'], { relativeTo: this.route });\n    }, error => {\n      this.snackBar.open('Something went wrong!', '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n    \n      if (error.status === 404) \n      {\n        this.snackBar.open(error.error, '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n      }\n    });\n  }\n\n  ///getNationMaster\n  public getNationMaster() {\n    this.appService.getsubAllcountry(\"api/MasterAPIs/GetAllCountry\").subscribe(data => {\n      this.country = data;\n    })\n  }\n\n  /// on Change Country\n  public onChangeCountry(event) {\n    if (event.value) {\n      let CountryId = event.value;\n      this.appService.getStateById(\"api/MasterAPIs/GetStateByCountyId/\" + CountryId).subscribe(\n        data => {\n          this.states = data;\n          this.cities = null;\n        }\n      );\n    } else {\n      this.states = null;\n      this.cities = null;\n    }\n  }\n\n  /// Get State Method\n  public GetState(CountryId) {\n    if (CountryId == undefined) {\n      CountryId == 1;\n    }\n    this.appService.getStateById(\"api/MasterAPIs/GetStateByCountyId/\" + CountryId).subscribe((data: any) => {\n      this.states = data;\n    })\n  }\n\n  // On change State\n  public onChangeState(event) {\n    if (event.value) {\n      let StateId = event.value;\n      this.appService.getCityById(\"api/MasterAPIs/GetCityByStateId/\" + StateId).subscribe(\n        data => this.cities = data\n      );\n    } else {\n      this.cities = null;\n    }\n  }\n\n  /// Get City Method   \n  public GetCity(StateId) {\n    this.StateId = this.uploadForm.value;\n    this.appService.getCityById(\"api/MasterAPIs/GetCityByStateId/\" + StateId).subscribe((data: any) => {\n      this.cities = data;\n    })\n  }\n\n  public onCheckBoxChange(e) {\n    if (e.checked) {\n      this.isFree = true;\n    }\n    else {\n      this.isFree = false;\n    }\n  }\n\n  public onCheckBoxChangeisGlobal(e) {\n    if (e.checked) {\n      this.isGlobal = true;\n    }\n    else {\n      this.isGlobal = false;\n    }\n  }\n\n  ///getContenttypenameMaster\n  public getContenttypenameMaster() {\n    this.appService.getsubAllcontenttype(\"api/MasterAPIs/GetAllContentType\").subscribe(data => {\n      this.ContenttypeList = data;\n    });\n  }\n\n  ///GetUserById\n  public getcontentbyId(advertiseContentId) {\n    if (advertiseContentId > 0) {\n      this.appService.getAdvContentById(\"api/AdvtContentDetail/GetAdvContentDetailById/\", advertiseContentId).subscribe(data => {\n        this.uploadForm.controls['title'].setValue(data.title);\n        this.uploadForm.controls['nationId'].setValue(data.nationId);\n        this.uploadForm.controls['stateId'].setValue(data.stateId);\n        this.uploadForm.controls['cityId'].setValue(data.cityId);\n        this.uploadForm.controls['finalPrice'].setValue(data.finalPrice);\n        this.uploadForm.controls['startDate'].setValue(data.startDate);\n        this.uploadForm.controls['endDate'].setValue(data.endDate);\n        this.uploadForm.controls['contentTypeId'].setValue(data.contentTypeId);\n        this.uploadForm.controls['isFree'].setValue(data.isFree);\n        this.uploadForm.controls['isGlobal'].setValue(data.isGlobal);\n        this.GetState(data.nationId);\n        this.GetCity(data.stateId);\n      });\n    }\n  }\n}\n","<div class=\"p-1\">\n    <mat-card class=\"p-0\">\n        <div fxLayout=\"row wrap \" fxLayoutAlign=\"space-between center\" class=\"w-100 p-2 crdhead\">\n            <h2><i class=\"fa fa-bars\" aria-hidden=\"true\"></i>&nbsp;{{ advertiseContentId ? 'Edit' : 'Add' }} Advertise\n                Content</h2>\n        </div>\n\n        <form [formGroup]=\"uploadForm\" (ngSubmit)=\"Submit(uploadForm.value)\" autocomplete=\"off\">\n\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\" class=\"container\">\n\n                    <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\" class=\"block-2\">\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Title</mat-label>\n                                <input formControlName=\"title\" matInput required (keydown)=\"titlekeyDown($event)\">\n                                <mat-error *ngIf=\"uploadForm.controls.title.errors?.required\">Please enter\n                                    title</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.title.hasError('minlength')\">Title at\n                                    least 3 characters long</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.title.hasError('maxlength')\">Title at\n                                    most 100 char long</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Start Date</mat-label>\n                                <input formControlName=\"startDate\" [matDatepicker]=\"startDatePicker\" matInput required>\n                                <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\n                                <mat-datepicker touchUi #startDatePicker></mat-datepicker>\n                                <mat-error *ngIf=\"uploadForm.controls.startDate.errors?.required\">Start Date Is\n                                    Required</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>End Date</mat-label>\n                                <input formControlName=\"endDate\" [matDatepicker]=\"endDatePicker\" matInput required\n                                    [min]=\"uploadForm.controls.startDate.value\">\n                                <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\n                                <mat-datepicker touchUi #endDatePicker></mat-datepicker>\n                                <mat-error *ngIf=\"uploadForm.controls.endDate.errors?.required\">End Date Is\n                                    Required</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.endDate.errors?.endDateBeforeStartDate\">End date\n                                    must be after start date</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                    </div>\n\n                    <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\"\n                        class=\"block-2 mttop20\">\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <div appearance=\"outline\" class=\"w-100 sgln\">\n                                <mat-label>Advertise Content Upload (.mp4/.jpg/.jpeg/.png)<span\n                                        class=\"mat-placeholder-required\">*</span></mat-label><br />\n                                <input type=\"file\" class=\"input1_height\" accept=\"video/*,image/*\"\n                                    (change)=\"handleFileSelect($event)\" #fileInput required />\n                                <mat-error style=\"font-size: 12px;\"\n                                    *ngIf=\"!selectedFile&& !isFileUploaded&& !advertiseContentId\">Advertise Content is\n                                    required.</mat-error>\n                                <mat-error style=\"font-size: 12px;\" *ngIf=\"fileSizeError\">File size must be less than\n                                    50 MB.</mat-error>\n                                    <mat-error style=\"font-size: 12px;\" *ngIf=\"invalidfileType\">Invalid File Type.</mat-error>\n\n                            </div>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Content Type</mat-label>\n                                <mat-select formControlName=\"contentTypeId\" required>\n                                    <mat-option *ngFor=\"let content of ContenttypeList\" [value]=\"content.contentTypeId\">\n                                        <span>{{content.contentName}}</span>\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"uploadForm.controls.contentTypeId.errors?.required\">Please select\n                                    Content Type</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Final Price <span\n                                        style=\"font-family: Arial, sans-serif;\">(₹)</span></mat-label>\n                                <input (keypress)=\"keyPressOnlynum($event)\" formControlName=\"finalPrice\" maxlength=\"8\"\n                                    matInput required>\n                                <mat-error *ngIf=\"uploadForm.controls.finalPrice.errors?.required\">Please enter\n                                    final price</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                    </div>\n\n                    <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\"\n                        class=\"block-2 mttop20\">\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Country</mat-label>\n                                <mat-select formControlName=\"nationId\" required\n                                    (selectionChange)=\"onChangeCountry($event)\">\n                                    <mat-option *ngFor=\"let nation of country\" [value]=\"nation.countryId\">\n                                        <span>{{nation.name}}</span>\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"uploadForm.controls.nationId.errors?.required\">Please select\n                                    Country</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>State</mat-label>\n                                <mat-select formControlName=\"stateId\" required\n                                    (selectionChange)=\"onChangeState($event)\">\n                                    <mat-option *ngFor=\"let state of states\" [value]=\"state.stateId\">\n                                        <span>{{state.name}}</span>\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"uploadForm.controls.stateId.errors?.required\">Please select\n                                    State</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>City</mat-label>\n                                <mat-select formControlName=\"cityId\" required [value]=\"uploadForm.get('cityId').value\">\n                                    <mat-option *ngFor=\"let city of cities\" [value]=\"city.cityId\">\n                                        <span>{{city.name}}</span>\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"uploadForm.controls.cityId.errors?.required\">Please select\n                                    City</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                    </div>\n\n                    <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\"\n                        class=\"block-2 mttop20\">\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"left\" fxFlexFill class=\"grid-item\">\n\n                            <div appearance=\"outline\" class=\"w-100 sglnb\">\n                                <br>\n                                <mat-label>Is Free ? <span class=\"mat-placeholder-required\"></span></mat-label>\n                                <mat-slide-toggle formControlName=\"isFree\" color=\"primary\" class=\"mttop20\"\n                                    [checked]=\"isFree\" (change)=\"onCheckBoxChange($event)\"> </mat-slide-toggle>\n                            </div>\n\n                        </div>\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"left\" fxFlexFill class=\"grid-item\">\n                            <div appearance=\"outline\" class=\"w-100 sglnb\">\n                                <br>\n                                <mat-label>Is Global ? <span class=\"mat-placeholder-required\"></span></mat-label>\n                                <mat-slide-toggle formControlName=\"isGlobal\" color=\"primary\" class=\"mttop20\"\n                                    [checked]=\"isGlobal\" (change)=\"onCheckBoxChangeisGlobal($event)\">\n                                </mat-slide-toggle>\n                            </div>\n                        </div>\n\n                        <!-- hiddenfield -->\n                        <input formControlName=\"advertiseContentId\" matInput hidden>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n\n                        </div>\n                    </div>\n\n                </div>\n\n            </mat-card-content>\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\" p-2 crdfooter\">\n                <div fxLayout=\"\" fxLayoutGap=\"10px\" class=\"container\">\n                    <div fxFlex=\"50%\" class=\"text-left\">\n                        <button [routerLink]=\"['/admin/salespersonadmin/listadvertisecontent']\" mat-raised-button\n                            color=\"accent\" type=\"button\" class=\"crbtn\"> <i class=\"fa fa-arrow-circle-left\"\n                                aria-hidden=\"true\"></i>\n                            BACK</button>\n                        <button [disabled]=\"advertiseContentId ? false : (!uploadForm.valid || !selectedFile)\"\n                            mat-raised-button color=\"primary\" type=\"submit\" class=\"crbtn\"><i class=\"fa fa-floppy-o\"\n                                aria-hidden=\"true\"></i> {{ advertiseContentId ? 'UPDATE' : 'SUBMIT' }}</button>\n                    </div>\n                    <div fxFlex=\"50%\" class=\"text-right\">\n                        <h4 class=\"crdtip\">Tip : (*) fields are mandatory.</h4>\n                    </div>\n                </div>\n            </div>\n\n        </form>\n\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AppService } from 'src/app/app.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { OkDialogComponent } from 'src/app/shared/ok-dialog/ok-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-addeditlisting',\n  templateUrl: './addeditlisting.component.html',\n  styleUrls: ['./addeditlisting.component.css']\n})\n\nexport class AddeditlistingComponent implements OnInit {\n  listingId: string | any;\n  public progress: number;\n  public message: string;\n  public form: FormGroup;\n  isDeleted: false;\n  isAddMode!: boolean;\n  submitted = false;\n  public formdata = {};\n  public ContentTypeList = [];\n  public languageList = [];\n  companyLogoFilePath?: FileList;\n  selectedFile: File = null;\n  file: any;\n  public PlayerDetailsList: any = [];\n  public SportCategoryList=[];\n  selectedPlayerSportId: any;\n  public country = [];\n  public StateList = [];\n  public CityList = [];\n  states: any = [];\n  cities: any[];\n  StateId: string | any;\n  playerId: string | any;\n  CountrytId: string | any;\n  CitiesId: string | any;\n  isGlobal: boolean = false;\n  isFileUploaded: boolean = false;\n  invalidfileType=false;\n  public showtitleerror : boolean=false;\n\n\n  uploadForm = new FormGroup({\n    listingId: new FormControl('', []),\n    companyName: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]),\n    description: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    contactPersonName: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]),\n    contactPersonEmailId: new FormControl('', [Validators.required]),\n    contactPersonMobile: new FormControl('', [Validators.required]),\n    companyEmailId: new FormControl('', [Validators.required, Validators.pattern(\"^[a-zA0-Z9._%+-]+@[a-zA0-Z9.-]+\\\\.[aA-zZ]{2,4}$\")]),\n    companyMobile: new FormControl('', [Validators.required]),\n    companyPhone: new FormControl('', [Validators.required]),\n    companyWebSite: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(100)]),\n    nationId: new FormControl('', [Validators.required]),\n    stateId: new FormControl('', [Validators.required]),\n    cityId: new FormControl('', [Validators.required]),\n    isGlobal: new FormControl(),\n    startDate: new FormControl('', [Validators.required]),\n    endDate: new FormControl('', [Validators.required]),\n    finalPrice: new FormControl('', [Validators.required]),\n    position: new FormControl('', [Validators.required]),\n    companyLogoFilePath: new FormControl(),\n  });\n\n  constructor(public dialog: MatDialog, public appService: AppService, public snackBar: MatSnackBar, private route: ActivatedRoute, private router: Router, public formBuilder: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n   // this.getCategoryMaster();\n    this.getNationMaster();\n    this.listingId = this.route.snapshot.params['id'];\n    this.getlistdetailsbyid(this.listingId);\n    this.Getplayerdetailsbyplayerid();\n  }\n\n  ///Validation for only enter number\n  keyPressOnlynum(event) {\n    var inp = String.fromCharCode(event.keyCode);\n    if (/[0-9]/.test(inp)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n\n\n\n  ///check validation for blank space\n  titlekeyDown(event: KeyboardEvent) {\n    const inputValue = (event.target as HTMLInputElement).value;\n  \n    // Check if the input consists only of spaces\n    const isOnlySpaces = /^\\s*$/.test(inputValue);\n  \n    if (event.key === ' ' && isOnlySpaces) \n      {\n      this.showtitleerror = true; // Set the flag to show the error message\n      event.preventDefault(); // Prevent the space character from being inserted\n    } else {\n      this.showtitleerror = false; // Hide the error message for other keys\n    }\n  }\n  \n\n//Getplayerdetailsbyplayerid\nGetplayerdetailsbyplayerid() {\n  debugger;\n  var playerId = window.sessionStorage.getItem(\"playerId\")\n  this.appService.getContentByPlayerId(\"api/PlayerDetail/GetPlayerDetailById/\", playerId).subscribe(data => {\n    this.PlayerDetailsList = data;\n    if (this.PlayerDetailsList ) {\n      this.selectedPlayerSportId = this.PlayerDetailsList.sportId;\n      this.GetAllCategoryBySportId(this.selectedPlayerSportId);\n    }\n  },\n   error =>\n    {\n    console.error('Error fetching player details:', error);\n  });\n}\n\n///GetAllCategoryBySportId\nGetAllCategoryBySportId(sportId) {\n  debugger;\n  if (sportId) {\n    this.appService.getAllCategory(\"api/MasterAPIs/GetAllCategoryBySportId/\" + sportId).subscribe(\n      data => {\n        this.SportCategoryList = data;\n        console.log('Sport category list:', this.SportCategoryList);\n      }, error => {\n        console.error('Error fetching categories by sport ID:', error);\n      });\n  } else {\n    this.SportCategoryList = null;\n  }\n}\n\n\n\n\n  /// on Change Cat\n  // public onChangeCat(event) {\n  //   if (event.value) {\n  //     let categoryId = event.value;\n  //     this.appService.getStateById(\"api/MasterAPIs/GetSubcategoryByCategoryId/\" + categoryId).subscribe(\n  //       data => {\n  //         this.SubCategoryList = data;\n  //       }\n  //     );\n  //   } else {\n  //     this.subcategory = null;\n  //   }\n  // }\n\n  ///Submit\n  public Submit(userObject) {\n    if (this.listingId == \"\" || this.listingId == undefined) {\n      this.createList(this.formdata);\n    }\n    else {\n      if (this.uploadForm.valid) {\n        this.UpdateList(userObject);\n      }\n    }\n  }\n\n  getFileExtension1(filename: string): string {\n    return filename.split('.').pop()?.toLowerCase() || '';\n  }\n  ///Select file\n  handleFileSelect(event: any) {\n    this.file = event.target.files[0];\n    if (!this.file) {\n      this.selectedFile = null;\n      return;\n    }\n    const allowedExtensions = ['jpg', 'jpeg', 'png'];\n    const fileExtension = this.getFileExtension1(this.file.name);\n  \n    if (!allowedExtensions.includes(fileExtension)) {\n      // Invalid file type\n      this.invalidfileType=true;\n      this.isFileUploaded=true;\n      return;\n    }\n    if (this.file) {\n      this.selectedFile = this.file;\n      this.isFileUploaded = true;\n      this.invalidfileType=false;\n\n      setTimeout(() => {\n        this.isFileUploaded = false; // Reset isFileUploaded to false after a short delay\n      },);\n    }\n    this.updateSubmitButtonState();\n  }\n\n  ///Create List\n  public createList(userObject) {\n    var formData = new FormData();\n\n    let startDate = this.uploadForm.get('startDate').value;\n    let endDate = this.uploadForm.get('endDate').value;\n\n    let gmtFormatRegex = /^.{3}\\s.{3}\\s\\d{2}\\s\\d{4}\\s\\d{2}:\\d{2}:\\d{2}\\sGMT\\+\\d{4}\\s\\(.+\\)$/;\n\n    formData.append('companyName', this.uploadForm.value.companyName);\n    formData.append('description', this.uploadForm.value.description);\n    formData.append('contactPersonName', this.uploadForm.value.contactPersonName);\n    formData.append('contactpersonEmail', this.uploadForm.value.contactPersonEmailId);\n    formData.append('contactPersonMobile', this.uploadForm.value.contactPersonMobile);\n    formData.append('companyEmailId', this.uploadForm.value.companyEmailId);\n    formData.append('companyMobile', this.uploadForm.value.companyMobile);\n    formData.append('companyPhone', this.uploadForm.value.companyPhone);\n    formData.append('companyWebSite', this.uploadForm.value.companyWebSite);\n    formData.append('companyLogoFilePath', this.file);\n    formData.append('nationId', this.uploadForm.value.nationId);\n    formData.append('stateId', this.uploadForm.value.stateId);\n    formData.append('cityId', this.uploadForm.value.cityId);\n    formData.append('finalPrice', this.uploadForm.value.finalPrice);\n    formData.append('position', this.uploadForm.value.position);\n    formData.append('isGlobal', this.isGlobal.toString());\n\n    if (gmtFormatRegex.test(startDate)) {\n      let dateObject = new Date(startDate);\n      let endDateFormatted = `${dateObject.getFullYear()}-${(dateObject.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${dateObject\n          .getDate()\n          .toString()\n          .padStart(2, '0')} ${dateObject\n            .getHours()\n            .toString()\n            .padStart(2, '0')}:${dateObject.getMinutes().toString().padStart(2, '0')}:${dateObject\n              .getSeconds()\n              .toString()\n              .padStart(2, '0')}`;\n      formData.append('startDate', endDateFormatted);\n    }\n\n    if (gmtFormatRegex.test(endDate)) {\n      let dateObject = new Date(endDate);\n      let endDateFormatted = `${dateObject.getFullYear()}-${(dateObject.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${dateObject\n          .getDate()\n          .toString()\n          .padStart(2, '0')} ${dateObject\n            .getHours()\n            .toString()\n            .padStart(2, '0')}:${dateObject.getMinutes().toString().padStart(2, '0')}:${dateObject\n              .getSeconds()\n              .toString()\n              .padStart(2, '0')}`;\n      formData.append('endDate', endDateFormatted);\n    }\n\n    formData.append('PlayerId', window.sessionStorage.getItem(\"playerId\"));\n\n    if (window.sessionStorage.getItem(\"playerId\") != null || window.sessionStorage.getItem(\"playerId\") != undefined) {\n      this.appService.Addlisting('api/ListingDetail/AddListingDetail', formData).subscribe(() => {\n        const dialogRef = this.dialog.open(OkDialogComponent, {\n          maxWidth: \"500px\",\n          disableClose: true,\n\n          data: {\n            title: \"Save Action\",\n            message: \"Listing Details Added Successfully!\"\n          }\n        });\n        this.router.navigate(['/admin/salespersonadmin/listlisting'], { relativeTo: this.route });\n      },error => {\n        if (error.status === 404)\n        {\n          this.snackBar.open(error.error, '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n        }\n      });\n    }\n  }\n\n  ///Update List\n  public UpdateList(userObject) {\n    var formData = new FormData();\n\n    let startDate = this.uploadForm.get('startDate').value;\n    let endDate = this.uploadForm.get('endDate').value;\n    let gmtFormatRegex = /^.{3}\\s.{3}\\s\\d{2}\\s\\d{4}\\s\\d{2}:\\d{2}:\\d{2}\\sGMT\\+\\d{4}\\s\\(.+\\)$/;\n\n    formData.append('listingId', this.listingId);\n    formData.append('companyName', this.uploadForm.value.companyName);\n    formData.append('description', this.uploadForm.value.description);\n    formData.append('contactPersonName', this.uploadForm.value.contactPersonName);\n    formData.append('contactpersonEmail', this.uploadForm.value.contactPersonEmailId);\n    formData.append('contactPersonMobile', this.uploadForm.value.contactPersonMobile);\n    formData.append('companyEmailId', this.uploadForm.value.companyEmailId);\n    formData.append('companyMobile', this.uploadForm.value.companyMobile);\n    formData.append('companyPhone', this.uploadForm.value.companyPhone);\n    formData.append('companyWebSite', this.uploadForm.value.companyWebSite);\n    formData.append('nationId', this.uploadForm.value.nationId);\n    formData.append('stateId', this.uploadForm.value.stateId);\n    formData.append('cityId', this.uploadForm.value.cityId);\n    formData.append('finalPrice', this.uploadForm.value.finalPrice);\n    formData.append('isGlobal', this.isGlobal.toString());\n    formData.append('position', this.uploadForm.value.position);\n    formData.append('companyLogoFilePath', this.file);\n\n    if (gmtFormatRegex.test(startDate)) {\n      let dateObject = new Date(startDate);\n      let endDateFormatted = `${dateObject.getFullYear()}-${(dateObject.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${dateObject\n          .getDate()\n          .toString()\n          .padStart(2, '0')} ${dateObject\n            .getHours()\n            .toString()\n            .padStart(2, '0')}:${dateObject.getMinutes().toString().padStart(2, '0')}:${dateObject\n              .getSeconds()\n              .toString()\n              .padStart(2, '0')}`;\n      formData.append('startDate', endDateFormatted);\n    }\n    else {\n      formData.append('startDate', this.uploadForm.value.startDate);\n    }\n\n    if (gmtFormatRegex.test(endDate)) {\n      let dateObject = new Date(endDate);\n      let endDateFormatted = `${dateObject.getFullYear()}-${(dateObject.getMonth() + 1)\n        .toString()\n        .padStart(2, '0')}-${dateObject\n          .getDate()\n          .toString()\n          .padStart(2, '0')} ${dateObject\n            .getHours()\n            .toString()\n            .padStart(2, '0')}:${dateObject.getMinutes().toString().padStart(2, '0')}:${dateObject\n              .getSeconds()\n              .toString()\n              .padStart(2, '0')}`;\n      formData.append('endDate', endDateFormatted);\n    }\n\n    else {\n      formData.append('endDate', this.uploadForm.value.endDate);\n    }\n\n    formData.append('PlayerId', window.sessionStorage.getItem(\"playerId\"));\n\n    this.appService.Addlisting('api/ListingDetail/AddListingDetail', formData).subscribe(() => {\n      const dialogRef = this.dialog.open(OkDialogComponent, {\n        maxWidth: \"500px\",\n        disableClose: true,\n\n        data: {\n          title: \"Edit Action\",\n          message: \"Listing Details Updated Successfully!\"\n        }\n      });\n      this.router.navigate(['/admin/salespersonadmin/listlisting'], { relativeTo: this.route });\n    },error => {\n      if (error.status === 404)\n      {\n        this.snackBar.open(error.error, '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n      }\n    });\n  }\n\n  ///getCategoryMaster\n  // public getCategoryMaster() {\n  //   this.appService.getAllCategory(\"api/MasterAPIs/GetAllCategory\").subscribe(data => {\n  //     this.CategoryList = data;\n  //   });\n  // }\n\n  // ///getsubCategoryMaster\n  // public GetSubcat(categoryId) {\n  //   if (categoryId == undefined) {\n  //     categoryId == 1;\n  //   }\n  //   this.appService.getStateById(\"api/MasterAPIs/GetSubcategoryByCategoryId/\" + categoryId).subscribe((data: any) => {\n  //     this.SubCategoryList = data;\n  //   })\n  // }\n\n  ///getNationMaster\n  public getNationMaster() {\n    this.appService.getsubAllcountry(\"api/MasterAPIs/GetAllCountry\").subscribe(data => {\n      this.country = data;\n    })\n  }\n\n  /// on Change Country\n  public onChangeCountry(event) {\n    if (event.value) {\n      let CountryId = event.value;\n      this.appService.getStateById(\"api/MasterAPIs/GetStateByCountyId/\" + CountryId).subscribe(\n        data => {\n          this.states = data;\n          this.cities = null;\n        }\n      );\n    } else {\n      this.states = null;\n      this.cities = null;\n    }\n  }\n\n  ///Get state on country slection\n  public GetState(CountryId) {\n    if (CountryId == undefined) {\n      CountryId == 1;\n    }\n    this.appService.getStateById(\"api/MasterAPIs/GetStateByCountyId/\" + CountryId).subscribe((data: any) => {\n      this.states = data;\n    })\n  }\n\n  /// On change State\n  public onChangeState(event) {\n    if (event.value) {\n      let StateId = event.value;\n      this.appService.getCityById(\"api/MasterAPIs/GetCityByStateId/\" + StateId).subscribe(\n        data => this.cities = data\n      );\n    } else {\n      this.cities = null;\n    }\n  }\n\n  /// Get City Method   \n  public GetCity(StateId) {\n    this.StateId = this.uploadForm.value;\n    this.appService.getCityById(\"api/MasterAPIs/GetCityByStateId/\" + StateId).subscribe((data: any) => {\n      this.cities = data;\n    })\n  }\n\n  public onCheckBoxChangeisGlobal(e) {\n    this.isGlobal = e.checked;\n  }\n\n  ///Validation for only enter char\n  keyPressOnlyChar(event) {\n    var inp = String.fromCharCode(event.keyCode);\n    if (/[a-zA-Z]/.test(inp)) {\n      return true;\n    } else {\n      event.preventDefault();\n      return false;\n    }\n  }\n\n  ///Validation for only enter char\n  keyPressOnlyCharContactpersonName(event) {\n    var inp = String.fromCharCode(event.keyCode);\n    if (/[a-zA-Z]/.test(inp)) {\n      // Allow alphabets\n      return true;\n    } else if (inp === \" \") {\n      // Allow one space\n      var contactPersonName = event.target.value;\n      if (!contactPersonName.endsWith(\" \")) {\n        return true;\n      }\n    }\n    event.preventDefault();\n    return false;\n  }\n\n  ///stop enter space\n  blockSpaces(event: KeyboardEvent) {\n    if (event.key === ' ') {\n      event.preventDefault();\n    }\n  }\n\n  ///getlistdetailbyid\n  public getlistdetailsbyid(listingId) {\n    if (listingId > 0) {\n      this.appService.getById(\"api/ListingDetail/GetListingDetailById/\", listingId).subscribe(data => {\n        this.uploadForm.controls['companyName'].setValue(data.companyName);\n        this.uploadForm.controls['description'].setValue(data.description);\n        this.uploadForm.controls['companyEmailId'].setValue(data.companyEmailId);\n        this.uploadForm.controls['companyMobile'].setValue(data.companyMobile);\n        this.uploadForm.controls['companyPhone'].setValue(data.companyPhone);\n        this.uploadForm.controls['companyWebSite'].setValue(data.companyWebSite);\n        this.uploadForm.controls['contactPersonMobile'].setValue(data.contactPersonMobile);\n        this.uploadForm.controls['contactPersonName'].setValue(data.contactPersonName);\n        this.uploadForm.controls['contactPersonEmailId'].setValue(data.contactPersonEmailId);\n\n        this.GetState(data.nationId);\n        this.GetCity(data.stateId);\n        this.uploadForm.controls['nationId'].setValue(data.nationId);\n        this.uploadForm.controls['stateId'].setValue(data.stateId);\n        this.uploadForm.controls['cityId'].setValue(data.cityId);\n        this.isGlobal = data.isGlobal;\n        this.uploadForm.controls['startDate'].setValue(data.startDate);\n        this.uploadForm.controls['endDate'].setValue(data.endDate);\n        this.uploadForm.controls['finalPrice'].setValue(data.finalPrice);\n        this.uploadForm.controls['position'].setValue(data.position);\n        this.uploadForm.controls['PlayerId'].setValue(data.PlayerId);\n      });\n    }\n  }\n\n\n  isSubmitDisabled(): boolean\n   {\n    return !this.uploadForm.valid || !this.selectedFile;\n   }\n\n  submitDisabled: boolean = true;\n  updateSubmitButtonState() \n  {\n    this.submitDisabled = this.isSubmitDisabled();\n  }\n}","<div class=\"p-1\">\n    <mat-card class=\"p-0\">\n        <div fxLayout=\"row wrap \" fxLayoutAlign=\"space-between center\" class=\"w-100 p-2 crdhead\">\n            <h2><i class=\"fa fa-bars\" aria-hidden=\"true\"></i>&nbsp;{{ listingId ? 'Edit' : 'Add' }} Listing</h2>\n        </div>\n        <form [formGroup]=\"uploadForm\" (ngSubmit)=\"Submit(uploadForm.value)\" autocomplete=\"off\">\n            <mat-card-content>\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\" class=\"container\">\n                    <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\" class=\"block-2\">\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Brand Name</mat-label>\n                                <input formControlName=\"companyName\" matInput required (keydown)=\"titlekeyDown($event)\">\n                                <mat-error *ngIf=\"uploadForm.controls.companyName.errors?.required\">Please enter\n                                    Brand Name</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.companyName.hasError('minlength')\">Please enter\n                                    valid Brand Name</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.companyName.hasError('maxlength')\">Please enter\n                                    valid Brand Name</mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label> Email</mat-label>\n                                <input (keypress)=\"blockSpaces($event)\" formControlName=\"companyEmailId\" required\n                                    minlength=\"3\" matInput required\n                                    pattern=\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\">\n                                <mat-error *ngIf=\" uploadForm.controls.companyEmailId.errors?.required\">Please enter\n                                     Email</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.companyEmailId.hasError('pattern')\">Please enter\n                                    valid Email</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label> Mobile</mat-label>\n                                <input (keypress)=\"keyPressOnlynum($event)\" formControlName=\"companyMobile\" required\n                                    minlength=\"3\" pattern=\"[0-9 ]+\" minlength=\"10\" maxlength=\"10\" matInput required>\n                                <mat-error *ngIf=\" uploadForm.controls.companyMobile.errors?.required\">Please enter\n                                     Mobile</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.companyMobile.hasError('minlength')\"> \n                                    Mobile must\n                                    be 10 digit</mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n\n                    <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\"\n                        class=\"block-2 mttop20\">\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label> Landline</mat-label>\n                                <input (keypress)=\"keyPressOnlynum($event)\" formControlName=\"companyPhone\" required\n                                    minlength=\"3\" pattern=\"[0-9 ]+\" minlength=\"10\" maxlength=\"11\" matInput required>\n                                <mat-error *ngIf=\" uploadForm.controls.companyPhone.errors?.required\">Please enter\n                                     Landline</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.companyPhone.hasError('minlength')\">Please enter\n                                    valid Landline</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label> Website</mat-label>\n                                <input (keypress)=\"blockSpaces($event)\" matInput minlength=\"5\"\n                                    formControlName=\"companyWebSite\" required>\n                                <mat-error *ngIf=\" uploadForm.controls.companyWebSite.errors?.required\">Please enter\n                                     Website</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.companyWebSite.hasError('minlength')\">Please enter\n                                    valid Website</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.companyWebSite.hasError('maxlength')\">Please enter\n                                    valid Website</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <div appearance=\"outline\" class=\"w-100 sgln\">\n                                <mat-label>Brand Logo (.jpg/.jpeg/.png)<span\n                                        class=\"mat-placeholder-required\">*</span></mat-label><br />\n                                <input type=\"file\" class=\"input1_height\" accept=\"image/*\"\n                                    (change)=\"handleFileSelect($event)\" #fileInput required />\n                                <mat-error style=\"font-size: 11px;\"\n                                    *ngIf=\"!selectedFile&& !isFileUploaded&& !listingId\">Please upload Brand\n                                    Logo</mat-error>\n                                    <mat-error style=\"font-size: 12px;\" *ngIf=\"invalidfileType\">Invalid File Type.</mat-error>\n\n                            </div>\n                        </div>\n                    </div>\n\n                    <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\"\n                        class=\"block-2 mttop20\">\n                        <div fxFlex.gt-sm=\"68.1%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Description </mat-label>\n                                <textarea formControlName=\"description\" matInput required (keydown)=\"titlekeyDown($event)\"></textarea>\n                                <mat-error *ngIf=\"uploadForm.controls.description.errors?.required\">Please enter\n                                    Description</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.description.hasError('minlength')\">Description at\n                                    least 3 characters long</mat-error>                              \n                            </mat-form-field>\n                        </div>\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Position</mat-label>\n                                <input (keypress)=\"keyPressOnlynum($event)\" maxlength=\"4\" formControlName=\"position\"\n                                    required pattern=\"[0-9 ]+\" matInput required>\n                                <mat-error *ngIf=\" uploadForm.controls.position.errors?.required\">Please enter position\n                                    number</mat-error>\n\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\"\n                        class=\"block-2 mttop20\">\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                        class=\"grid-item\">\n                        <mat-form-field appearance=\"outline\" class=\"w-100\">\n                            <mat-label>Contact Person Name</mat-label>\n                            <input formControlName=\"contactPersonName\" minlength=\"3\"\n                                (keypress)=\"keyPressOnlyCharContactpersonName($event)\" matInput required>\n                            <mat-error *ngIf=\"uploadForm.controls.contactPersonName.errors?.required\">Please enter\n                                Contact Person Name</mat-error>\n                            <mat-error *ngIf=\"uploadForm.controls.contactPersonName.hasError('minlength')\">Please\n                                enter valid Contact Person Name</mat-error>\n                            <mat-error *ngIf=\"uploadForm.controls.contactPersonName.hasError('maxlength')\">Please\n                                enter valid Contact Person Name</mat-error>\n                        </mat-form-field>\n                    </div>\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Contact Person Mobile</mat-label>\n                                <input (keypress)=\"keyPressOnlynum($event)\" formControlName=\"contactPersonMobile\"\n                                    required minlength=\"3\" pattern=\"[0-9 ]+\" minlength=\"10\" maxlength=\"10\" matInput\n                                    required>\n                                <mat-error *ngIf=\" uploadForm.controls.contactPersonMobile.errors?.required\">Please\n                                    enter Contact Person Mobile</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.contactPersonMobile.hasError('minlength')\">Contact\n                                    Person Mobile must\n                                    be 10 digit</mat-error>\n\n                            </mat-form-field>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Contact Person Email</mat-label>\n                                <input (keypress)=\"blockSpaces($event)\" formControlName=\"contactPersonEmailId\" required\n                                    minlength=\"3\" matInput pattern=\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\">\n                                <mat-error *ngIf=\" uploadForm.controls.contactPersonEmailId.errors?.required\">Please\n                                    enter Contact Person Email</mat-error>\n                                <mat-error *ngIf=\"uploadForm.controls.contactPersonEmailId.hasError('pattern')\">Please\n                                    enter\n                                    valid Contact Person Email</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                    </div>\n\n                    <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\"\n                        class=\"block-2 mttop20\">\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Country</mat-label>\n                                <mat-select formControlName=\"nationId\" required\n                                    (selectionChange)=\"onChangeCountry($event)\">\n                                    <mat-option *ngFor=\"let nation of country\" [value]=\"nation.countryId\">\n                                        <span>{{nation.name}}</span>\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"uploadForm.controls.nationId.errors?.required\">Please select\n                                    Country</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>State</mat-label>\n                                <mat-select formControlName=\"stateId\" required\n                                    (selectionChange)=\"onChangeState($event)\">\n                                    <mat-option *ngFor=\"let state of states\" [value]=\"state.stateId\">\n                                        <span>{{state.name}}</span>\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"uploadForm.controls.stateId.errors?.required\">Please select\n                                    State</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>City</mat-label>\n                                <mat-select formControlName=\"cityId\" required>\n                                    <mat-option *ngFor=\"let city of cities\" [value]=\"city.cityId\">\n                                        <span>{{city.name}}</span>\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"uploadForm.controls.cityId.errors?.required\">Please select\n                                    City</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                    </div>\n\n                    <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\"\n                        class=\"block-2 mttop20\">\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <div appearance=\"outline\" class=\"w-100 sgln\">\n                                <br>\n                                <mat-label>Is Global ? <span class=\"mat-placeholder-required\"></span></mat-label>\n                                <mat-slide-toggle formControlName=\"isGlobal\" color=\"primary\" class=\"mttop20\"\n                                    [checked]=\"isGlobal\" (change)=\"onCheckBoxChangeisGlobal($event)\">\n                                </mat-slide-toggle>\n                            </div>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Start Date</mat-label>\n                                <input formControlName=\"startDate\" [matDatepicker]=\"startDatePicker\" matInput required>\n                                <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\n                                <mat-datepicker touchUi #startDatePicker></mat-datepicker>\n                                <mat-error *ngIf=\"uploadForm.controls.startDate.errors?.required\">Please select Start\n                                    Date</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>End Date</mat-label>\n                                <input formControlName=\"endDate\" [matDatepicker]=\"endDatePicker\" matInput required\n                                    [min]=\"uploadForm.controls.startDate.value\">\n                                <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\n                                <mat-datepicker touchUi #endDatePicker></mat-datepicker>\n                                <mat-error *ngIf=\"uploadForm.controls.endDate.errors?.required\">Please select End\n                                    Date</mat-error>\n                            </mat-form-field>\n                        </div>\n\n                    </div>\n\n                    <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\"\n                        class=\"block-2 mttop20\">\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Final Price <span\n                                        style=\"font-family: Arial, sans-serif;\">(₹)</span></mat-label>\n                                <input (keypress)=\"keyPressOnlynum($event)\" maxlength=\"8\" formControlName=\"finalPrice\"\n                                    matInput required>\n                                <mat-error *ngIf=\"uploadForm.controls.finalPrice.errors?.required\">Please enter\n                                    Final Price</mat-error>\n\n                            </mat-form-field>\n                        </div>\n\n                        <!-- <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Category</mat-label>\n                                <mat-select formControlName=\"categoryId\" required\n                                    (selectionChange)=\"onChangeCat($event)\">\n                                    <mat-option *ngFor=\"let category of SportCategoryList\" [value]=\"category.categoryId\">\n                                        <span>{{category.name}}</span>\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"uploadForm.controls.categoryId.errors?.required\">Please select\n                                    Category</mat-error>\n                            </mat-form-field>\n                        </div> -->\n\n                        <!-- <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                            <mat-form-field appearance=\"outline\" class=\"w-100\">\n                                <mat-label>Sub-Category</mat-label>\n                                <mat-select formControlName=\"subCategoryId\" required>\n                                    <mat-option *ngFor=\"let subcategory of SubCategoryList\"\n                                        [value]=\"subcategory.subCategoryId\">\n                                        <span>{{subcategory.name}}</span>\n                                    </mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"uploadForm.controls.subCategoryId.errors?.required\">Please select\n                                    Sub-Category</mat-error>\n                            </mat-form-field>\n                        </div> -->\n\n                    </div>\n\n                    <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"10px\" fxFlex=\"33%\"\n                        class=\"block-2 mttop20\">\n\n                      \n                        <!-- hiddenfield -->\n                        <input formControlName=\"listingId\" matInput hidden>\n\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                        </div>\n                        <div fxFlex.gt-sm=\"33.33%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill\n                            class=\"grid-item\">\n                        </div>\n                    </div>\n\n                </div>\n            </mat-card-content>\n            <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\" class=\" p-2 crdfooter\">\n                <div fxLayout=\"\" fxLayoutGap=\"10px\" class=\"container\">\n                    <div fxFlex=\"50%\" class=\"text-left\">\n                        <button [routerLink]=\"['/admin/salespersonadmin/listlisting']\" mat-raised-button color=\"accent\"\n                            type=\"button\" class=\"crbtn\"> <i class=\"fa fa-arrow-circle-left\" aria-hidden=\"true\"></i>\n                            BACK</button>\n                        <button [disabled]=\"listingId ? false : (!uploadForm.valid || !selectedFile)\" mat-raised-button\n                            color=\"primary\" type=\"submit\" class=\"crbtn\"><i class=\"fa fa-floppy-o\"\n                                aria-hidden=\"true\"></i> {{ listingId ? 'UPDATE' : 'SUBMIT' }}</button>\n                    </div>\n                    <div fxFlex=\"50%\" class=\"text-right\">\n                        <h4 class=\"crdtip\">Tip : (*) fields are mandatory.</h4>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </mat-card>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { AppService } from 'src/app/app.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\n\nexport class DashboardComponent implements OnInit {\n\n  @Input() playerDetailsList: any;\n  constructor(public appService: AppService,) { }\n  public PlayerDetailsList: any = [];\n\n  ngOnInit(): void {\n    this.Getplayerdetailsbyplayerid();\n  }\n\n  ///Getplayerdetailsbyplayerid\n  public Getplayerdetailsbyplayerid() {\n    var playerId = window.sessionStorage.getItem(\"playerId\")\n    this.appService.getContentByPlayerId(\"api/PlayerDetail/GetPlayerDetailById/\", playerId).subscribe(data => {\n      this.PlayerDetailsList = data;\n    });\n  }\n\n}\n","<div fxLayout=\"column\" fxLayoutGap=\"10px\" class=\"container p-1\">\r\n    <div fxLayout.gt-sm=\"row\" fxLayout.lt-md=\"column\" fxFlex=\"33%\" class=\"block-2 \">\r\n        <div fxFlex.gt-sm=\"85%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"center center\" fxFlexFill class=\"grid-item\">\r\n        </div>\r\n        <div fxFlex.gt-sm=\"15%\" fxFlex.lt-md=\"50%\" fxLayoutAlign=\"right\" fxFlexFill class=\"grid-item text-right\">\r\n            <button [routerLink]=\"['/admin/salespersonadmin/startingpage']\" mat-raised-button color=\"primary\"\r\n                type=\"button\"><i class=\"fa fa-user\" aria-hidden=\"true\"></i>&nbsp;&nbsp;Change Player</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div fxLayout=\"row wrap \" #resizedDiv>\r\n\r\n    <div fxFlex=\"100\" fxFlex.gt-sm=\"100\" fxFlex.sm=\"50\" class=\"p-11\">\r\n        <mat-card class=\"p-0 Divbg2s\">\r\n            <div class=\"card1\">\r\n                <div class=\"p-1 text-center\">\r\n                    <img class=\"w-full h-full rounded-full ng-star-inserted imgs1\"\r\n                        [src]=\"PlayerDetailsList.profileImageFilePath\">\r\n                </div>\r\n                <div class=\"p-0\">\r\n                    <p class=\"text-center fliph1\">{{PlayerDetailsList.playerName}} <br> \r\n                        <span class=\"sport-name\">\r\n                            Sport - {{ PlayerDetailsList.sportName }}\r\n                        </span></p>\r\n                </div>\r\n            </div>\r\n        </mat-card>\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\nimport { AddeditadvertiseaddsonComponent } from '../addeditadvertiseaddson/addeditadvertiseaddson.component';\nimport { AppService } from 'src/app/app.service';\nimport { OkDialogComponent } from 'src/app/shared/ok-dialog/ok-dialog.component';\n\n@Component({\n  selector: 'app-listadvertiseaddson',\n  templateUrl: './listadvertiseaddson.component.html',\n  styleUrls: ['./listadvertiseaddson.component.css']\n})\n\nexport class ListadvertiseaddsonComponent implements OnInit {\n  public ContentAddsOn: any = [];\n  public NewContentAddsOn: any = [];\n  public page: any;\n  public count = 8;\n  public advContentMapId: any;\n  public title: any;\n\n  constructor(public dialog: MatDialog, public appService: AppService) { }\n\n  openDialog(advContentMapId: any): void {\n    this.advContentMapId = advContentMapId\n    const dialogRef = this.dialog.open(AddeditadvertiseaddsonComponent, {\n      width: '100vh',\n      disableClose: true,\n      data: { advContentMapId: advContentMapId }\n    }\n    );\n  }\n\n  ngOnInit(): void {\n    this.GetAllContentUpdateList();\n  }\n\n  ///GetAllContentUpdateList\n  public GetAllContentUpdateList() {\n    var playerId = window.sessionStorage.getItem(\"playerId\")\n    this.appService.getContentUpdateByPlayerId(\"api/AdvContentMapping/GetAdvContentMappingByPlayerId/\", playerId).subscribe(data => {\n      this.ContentAddsOn = data;\n      this.NewContentAddsOn = data;\n    });\n  }\n\n  ///Delete advertise ads on\n  public deleteservice(content: any) {\n\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"400px\",\n      disableClose: true,\n\n      data: {\n        title: \"Confirm Action\",\n        message: \"Are you sure you want delete this?\"\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if (dialogResult) {\n        const index: number = this.ContentAddsOn.indexOf(content);\n        if (index !== -1) {\n          this.ContentAddsOn.splice(index, 1);\n          const dialogRef = this.dialog.open(OkDialogComponent, {\n            maxWidth: \"500px\",\n            disableClose: true,\n\n            data: {\n              title: \"Delete Action\",\n              message: \"Advertise Ads Deleted Successfully!\"\n            }\n          });\n          this.appService.deleteuser(`api/AdvContentMapping/DeleteAdvContentMapping?advcontentmapId=${content.advContentMapId}`, {}).subscribe(data => {\n          });\n        }\n      }\n    });\n  }\n\n  ///pagination\n  public onPageChanged(event) {\n    this.page = event;\n    window.scrollTo(0, 0);\n  }\n\n  ///Search\n  Search() {\n    if (this.title == \"\") {\n      this.GetAllContentUpdateList();\n    }\n    else {\n      this.ContentAddsOn = this.NewContentAddsOn.filter(res => {\n        return (\n          res.contentName.toLocaleLowerCase().includes(this.title.toLocaleLowerCase()) ||\n          res.advertiseContentName.toLocaleLowerCase().includes(this.title.toLocaleLowerCase()) ||\n          res.categoryName.toLocaleLowerCase().includes(this.title.toLocaleLowerCase()) ||\n          res.subcategoryName.toLocaleLowerCase().includes(this.title.toLocaleLowerCase()) ||\n          res.position.toString().includes(this.title)\n        );\n      });\n      this.page = 1;\n\n    }\n  }\n}\n","<div class=\"p-1\">\n    <mat-card class=\"p-0\">\n\n        <div fxLayout=\"row wrap \" fxLayoutAlign=\"space-between center\" class=\"w-100 p-2 crdhead\">\n            <h2><i class=\"fa fa-bars\" aria-hidden=\"true\"></i>&nbsp; Advertise Ads On List</h2>\n            <table class=\"tblsearch\">\n                <tr>\n                    <td class=\"tdsearch\"> <span class=\"fa fa-search searchtext-icon\"></span>\n                        <input matInput type=\"text\" class=\"searchtext\" placeholder=\"Search...\" name=\"title\"\n                            [(ngModel)]=\"title\" (input)=\"Search()\" (keyup)=\"Search()\" (ngModelChange)=\"Search()\">\n                    </td>\n                    <td class=\"tdbtn\">\n                        <button mat-raised-button color=\"primary\" class=\"crbtn\" type=\"button\"\n                            (click)=\"openDialog(null)\">\n                            <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>&nbsp; ADD</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n        <mat-divider></mat-divider>\n\n        <div class=\"mat-table admin-table\">\n\n            <div class=\"mat-header-row\">\n                <div class=\"mat-header-cell\">Content Title</div>\n                <div class=\"mat-header-cell \">Advertise Content Name</div>\n                <div class=\"mat-header-cell\">Category / Sub-Category</div>\n                <div class=\"mat-header-cell text-center\" fxFlex.gt-sm=\"15\">Position</div>\n                <div class=\"mat-header-cell text-center\" fxFlex.gt-sm=\"10\">Action</div>\n            </div>\n\n            <div class=\"mat-row\"\n                *ngFor=\"let content of ContentAddsOn| paginate: { itemsPerPage: count, currentPage: page }\">\n                <div class=\"mat-cell\">{{content.contentName}}\n                </div>\n                <div class=\"mat-cell \" matTooltip=\"{{content.advertiseContentName}}\">{{content.advertiseContentName|\n                    slice:0:35}}\n                    {{content.advertiseContentName.length > 40 ? '' : ' '}}</div>\n                <div class=\"mat-cell\">{{content.categoryName }} / {{content.subcategoryName}}</div>\n                <div class=\"mat-cell text-center\" fxFlex.gt-sm=\"15\">{{content.position}}</div>\n                <div class=\"mat-cell text-center\" fxFlex.gt-sm=\"10\">\n                    <a (click)=\"openDialog(content.advContentMapId)\" mat-mini-fab color=\"primary\" matTooltip=\"Edit\"><i\n                            class=\"fa fa-pencil\" aria-hidden=\"true\"></i></a>\n                    <button (click)=\"deleteservice(content);\" mat-mini-fab color=\"warn\" matTooltip=\"Delete\"\n                        class=\"mx-1\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\n                </div>\n            </div>\n\n        </div>\n\n        <mat-divider></mat-divider>\n\n        <div fxLayout=\"row wrap\">\n            <div fxFlex=\"100\" class=\"p-1\">\n                <mat-card class=\"p-0 text-center nobxshbrd\">\n                    <pagination-controls class=\"product-pagination\" autoHide=\"true\" maxSize=\"5\"\n                        (pageChange)=\"onPageChanged($event)\"></pagination-controls>\n                </mat-card>\n            </div>\n        </div>\n\n    </mat-card>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AppService } from 'src/app/app.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AppSettings, Settings } from 'src/app/app.settings';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\nimport { OkDialogComponent } from 'src/app/shared/ok-dialog/ok-dialog.component';\n\n@Component({\n  selector: 'app-listadvertisecontent',\n  templateUrl: './listadvertisecontent.component.html',\n  styleUrls: ['./listadvertisecontent.component.css']\n})\n\nexport class ListadvertisecontentComponent implements OnInit {\n  public ContentList: any = [];\n  public NewContentList: any = [];\n  public contentIds: any = [];\n  public title: any;\n  public page: any;\n  public count = 8;\n\n  constructor(public appService: AppService, public dialog: MatDialog, public snackBar: MatSnackBar, private tokenStorage: TokenStorageService, public router: Router, public appSettings: AppSettings, private http: HttpClient) { }\n\n  ngOnInit(): void {\n    this.getAdvContentListByPlayetId();\n  }\n\n  ///Search\n  Search() {\n    if (this.title == \"\") {\n      this.getAdvContentListByPlayetId();\n    }\n    else {\n      this.ContentList = this.NewContentList.filter(res => {\n        const lowerCaseContentName = this.title.toLowerCase();\n        const titleIncludes = res.title.toLowerCase().includes(lowerCaseContentName);\n        const finalPriceIncludes = res.finalPrice.toLowerCase().includes(lowerCaseContentName);\n        const contentNameIncludes = res.contentName.toLowerCase().includes(lowerCaseContentName);\n        const approvedStatus = res.approved;\n        let approvedLabel = \"\";\n\n        if (approvedStatus === null) {\n          approvedLabel = \"Pending\";\n        } else if (approvedStatus === true) {\n          approvedLabel = \"Approved\";\n        } else if (approvedStatus === false) {\n          approvedLabel = \"Not Approved\";\n        }\n\n        const approvedIncludes = approvedLabel.toLowerCase().includes(lowerCaseContentName);\n\n        return (\n          titleIncludes ||\n          finalPriceIncludes ||\n          contentNameIncludes ||\n          approvedIncludes\n        );\n      });\n      this.page = 1;\n    }\n  }\n\n  ///pagination\n  public onPageChanged(event) {\n    this.page = event;\n    window.scrollTo(0, 0);\n  }\n\n  ///Delete Content\n  public deleteservice(content: any) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"400px\",\n      disableClose: true,\n\n      data: {\n        title: \"Confirm Action\",\n        message: \"Are you sure you want delete this Advertise content?\"\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if (dialogResult) {\n        const index: number = this.ContentList.indexOf(content);\n        if (index !== -1) {\n          this.ContentList.splice(index, 1);\n          const dialogRef = this.dialog.open(OkDialogComponent, {\n            maxWidth: \"500px\",\n            disableClose: true,\n\n            data: {\n              title: \"Delete Action\",\n              message: \"Advertise Content Deleted Successfully!\"\n            }\n          });\n          this.appService.deleteuser(`api/AdvtContentDetail/DeleteAdvContentDetail?AdvertiseContentId=${content.advertiseContentId}`, {}).subscribe(data => {\n          },\n          error => {\n            if (error.status === 400)\n            {\n              this.snackBar.open(error.error, '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n            }\n          }\n          );\n        }\n      }\n    });\n  }\n\n  ///Edit click button\n  onEditClick(event: MouseEvent, content: any) {\n    if (content && content.approved) {\n      event.preventDefault();\n    }\n  }\n\n  ///GetContentDetailsbyPlayerID\n  public getAdvContentListByPlayetId() {\n    var playerId = window.sessionStorage.getItem(\"playerId\")\n    this.appService.getAdvContentByPlayerId(\"api/AdvtContentDetail/GetAdvContentByPlayerId/\", playerId).subscribe(data => {\n      this.ContentList = data;\n      this.NewContentList = data;\n    });\n  }\n\n}\n","<div class=\"p-1\">\n    <mat-card class=\"p-0\">\n\n        <div fxLayout=\"row wrap \" fxLayoutAlign=\"space-between center\" class=\"w-100 p-2 crdhead\">\n            <h2><i class=\"fa fa-bars\" aria-hidden=\"true\"></i>&nbsp; Advertise Content List</h2>\n            <table class=\"tblsearch\">\n                <tr>\n                    <td class=\"tdsearch\"> <span class=\"fa fa-search searchtext-icon\"></span>\n                        <input matInput type=\"text\" class=\"searchtext\" placeholder=\"Search...\" name=\"title\"\n                            [(ngModel)]=\"title\" (input)=\"Search()\" (keyup)=\"Search()\" (ngModelChange)=\"Search()\">\n                    </td>\n\n                    <td class=\"tdbtn\">\n                        <button mat-raised-button color=\"primary\" class=\"crbtn\" type=\"button\"\n                            [routerLink]=\"['../addeditadvertisecontent']\">\n                            <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>&nbsp; ADD</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n        <mat-divider></mat-divider>\n\n        <div class=\"mat-table admin-table\">\n\n            <div class=\"mat-header-row\">\n                <div class=\"mat-header-cell\">Title</div>\n                <div class=\"mat-header-cell text-center\" fxFlex.gt-sm=\"10\">Is Global?</div>\n                <div class=\"mat-header-cell text-center\">Advertise Content</div>\n                <div class=\"mat-header-cell\" fxFlex.gt-sm=\"10\">Start Date</div>\n                <div class=\"mat-header-cell\" fxFlex.gt-sm=\"10\">End Date</div>\n                <div class=\"mat-header-cell\">Final Price <span style=\"font-family: Arial, sans-serif;\">(₹)</span></div>\n                <div class=\"mat-header-cell text-center\" fxFlex.gt-sm=\"8\">Is Free?</div>\n                <div class=\"mat-header-cell text-center\">Content Type</div>\n                <div class=\"mat-header-cell\">Approved?</div>\n                <div class=\"mat-header-cell text-center\" fxFlex.gt-sm=\"10\">Action</div>\n            </div>\n\n            <div *ngFor=\"let content of ContentList | paginate: { itemsPerPage: count, currentPage: page }\"\n                class=\"mat-row\">\n                <div class=\"mat-cell\">{{content.title}}\n                </div>\n                <div class=\"mat-cell text-center\" fxFlex.gt-sm=\"10\"> <ng-container\n                        *ngIf=\"content.isGlobal; else noApproval\" style=\"margin-left: 5cm\">{{'Yes'}}</ng-container>\n                    <ng-template #noApproval style=\"margin-left: 5cm\">{{'No'}}</ng-template>\n                </div>\n                <div class=\"mat-cell text-center\"><a href=\"{{content.advertiseFilePath}}\" class=\"mat-cell\"\n                        target=\"_blank\" style=\"color: #a08820;\">View</a></div>\n                <div class=\"mat-cell\" fxFlex.gt-sm=\"10\">{{content.startDate| date: 'dd/MM/yyyy' }}</div>\n                <div class=\"mat-cell\" fxFlex.gt-sm=\"10\">{{content.endDate| date: 'dd/MM/yyyy' }}</div>\n                <div class=\"mat-cell\">{{content.finalPrice}}</div>\n                <div class=\"mat-cell text-center blck\" fxFlex.gt-sm=\"8\" fxLayout=\"row\">\n                    <ng-container *ngIf=\"content.isFree; else noApproval\">{{'Yes'}}</ng-container>\n                    <ng-template #noApproval>{{'No'}}</ng-template>\n                </div>\n                <div class=\"mat-cell text-center\">{{content.contentName}}</div>\n                <div class=\"mat-cell text-center\" fxFlex.gt-sm=\"11\" fxLayout=\"row\">\n                    {{ content.approved === true ? 'Approved' : content.approved === false ? 'Not Approved' :\n                    'Pending' }}&nbsp;<i *ngIf=\"content.approved !== null && !content.approved\"\n                        class=\"fa fa-info-circle cmtinfo\" aria-hidden=\"true\" matTooltip=\"{{content.comment}}\"></i>\n                </div>\n                <div class=\"mat-cell text-center\" fxFlex.gt-sm=\"10\">\n                    <button [routerLink]=\"['../addeditadvertisecontent',content.advertiseContentId]\" mat-mini-fab\n                        color=\"primary\" matTooltip=\"Edit\" [disabled]=\"content.approved\"\n                        [ngClass]=\"{'disabled': content.approved}\" (click)=\"onEditClick($event)\"><i class=\"fa fa-pencil\"\n                            aria-hidden=\"true\"></i></button>\n                    <button [disabled]=\"content.approved\" [ngClass]=\"{'disabled': content.approved}\"\n                        (click)=\"deleteservice(content);\" mat-mini-fab color=\"warn\" matTooltip=\"Delete\" class=\"mx-1\"><i\n                            class=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\n                </div>\n            </div>\n        </div>\n\n        <mat-divider></mat-divider>\n\n        <div *ngIf=\"ContentList.length > 0\" fxLayout=\"row wrap\">\n            <div fxFlex=\"100\" class=\"p-1\">\n                <mat-card class=\"p-0 text-center nobxshbrd\">\n                    <pagination-controls class=\"product-pagination\" autoHide=\"true\" maxSize=\"5\"\n                        (pageChange)=\"onPageChanged($event)\"></pagination-controls>\n                </mat-card>\n            </div>\n        </div>\n\n    </mat-card>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AppService } from 'src/app/app.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { Router } from '@angular/router';\nimport { ConfirmDialogComponent } from 'src/app/shared/confirm-dialog/confirm-dialog.component';\nimport { OkDialogComponent } from 'src/app/shared/ok-dialog/ok-dialog.component';\n\n@Component({\n  selector: 'app-listlisting',\n  templateUrl: './listlisting.component.html',\n  styleUrls: ['./listlisting.component.css']\n})\n\nexport class ListlistingComponent implements OnInit {\n  public ListingList: any = [];\n  public NewListingList: any = [];\n  public title: any;\n  public page: any;\n  public count = 8;\n\n  constructor(public dialog: MatDialog, public appService: AppService, public snackBar: MatSnackBar, private tokenStorage: TokenStorageService, public router: Router) { }\n\n  ngOnInit(): void {\n    this.getlistingListByPlayetId();\n  }\n\n  ///getlistingListByPlayetId\n  public getlistingListByPlayetId() {\n    var playerId = window.sessionStorage.getItem(\"playerId\")\n    this.appService.getContentByPlayerId(\"api/ListingDetail/GetListingDetailByplayerId/\", playerId).subscribe(data => {\n      this.ListingList = data;\n      this.NewListingList = data;\n    });\n  }\n\n  ///Search\n  Search() {\n    if (this.title == \"\") {\n      this.getlistingListByPlayetId();\n    }\n    else {\n      this.ListingList = this.NewListingList.filter(res => {\n        return (res.companyName.toLocaleLowerCase().includes(this.title.toLocaleLowerCase()) ||\n          res.contactPersonName.toLocaleLowerCase().includes(this.title.toLocaleLowerCase()) ||\n          res.contactPersonEmailId.toLocaleLowerCase().includes(this.title.toLocaleLowerCase()) ||\n          res.contactPersonMobile.toLocaleLowerCase().includes(this.title.toLocaleLowerCase()) ||\n          res.companyEmailId.toLocaleLowerCase().includes(this.title.toLocaleLowerCase()) ||\n          res.companyMobile.toLocaleLowerCase().includes(this.title.toLocaleLowerCase()) ||\n          res.companyPhone.toLocaleLowerCase().includes(this.title.toLocaleLowerCase()) ||\n          res.companyWebSite.toLocaleLowerCase().includes(this.title.toLocaleLowerCase())\n        );\n      });\n      this.page = 1;\n    }\n  }\n\n  ///Pagination\n  public onPageChanged(event) {\n    this.page = event;\n    window.scrollTo(0, 0);\n  }\n\n  ///Delete\n  public deleteservice(listing: any) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: \"400px\",\n      disableClose: true,\n\n      data: {\n        title: \"Confirm Action\",\n        message: \"Are you sure you want delete this Listing Details?\"\n      }\n\n    });\n\n    dialogRef.afterClosed().subscribe(dialogResult => {\n      if (dialogResult) {\n        const index: number = this.ListingList.indexOf(listing);\n        if (index !== -1) {\n          this.ListingList.splice(index, 1);\n          const dialogRef = this.dialog.open(OkDialogComponent, {\n            maxWidth: \"500px\",\n            disableClose: true,\n\n            data: {\n              title: \"Delete Action\",\n              message: \"Listing Deleted Successfully!\"\n            }\n          });\n          this.appService.deleteuser(`api/ListingDetail/DeleteListingDetail?listingId=${listing.listingId}`, {}).subscribe(data => {\n          });\n        }\n      }\n    });\n  }\n}\n","<div class=\"p-1\">\n    <mat-card class=\"p-0\">\n\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between center\" class=\"w-100 p-2 crdhead\">\n            <h2><i class=\"fa fa-bars\" aria-hidden=\"true\"></i>&nbsp; Listing List</h2>\n            <table class=\"tblsearch\">\n                <tr>\n                    <td class=\"tdsearch\"> <span class=\"fa fa-search searchtext-icon\"></span>\n                        <input matInput type=\"text\" class=\"searchtext\" placeholder=\"Search...\" name=\"title\"\n                            [(ngModel)]=\"title\" (input)=\"Search()\" (keyup)=\"Search()\" (ngModelChange)=\"Search()\">\n                    </td>\n                    <td class=\"tdbtn\">\n                        <button mat-raised-button color=\"primary\" class=\"crbtn\" type=\"button\"\n                            [routerLink]=\"['../addeditlisting']\">\n                            <i class=\"fa fa-plus\" aria-hidden=\"true\"></i>&nbsp; ADD</button>\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n        <mat-divider></mat-divider>\n\n        <div class=\"mat-table admin-table\">\n\n            <div class=\"mat-header-row\">\n                <div class=\"mat-header-cell\">Brand Name</div>\n                <div class=\"mat-header-cell\">Contact Person</div>\n                <div class=\"mat-header-cell\">Brand Logo</div>\n                <div class=\"mat-header-cell text-center\">Is Global?</div>\n                <div class=\"mat-header-cell\">Start Date</div>\n                <div class=\"mat-header-cell\">End Date</div>\n                <div class=\"mat-header-cell\">Final Price <span style=\"font-family: Arial, sans-serif;\">(₹)</span></div>\n                <div class=\"mat-header-cell text-center\">Position</div>\n                <div class=\"mat-header-cell text-center\">Action</div>\n            </div>\n\n            <div *ngFor=\"let listing of ListingList | paginate: { itemsPerPage: count, currentPage: page }\" class=\"mat-row\">\n                <div class=\"mat-cell\">{{listing.companyName}}</div>\n                <div class=\"mat-cell\" matTooltip=\"{{listing.contactPersonName}}\">\n                    {{listing.contactPersonName.slice(0,listing.companyName.length)}}\n                </div>\n                <div class=\"mat-cell text-center\"><a href=\"{{listing.companyLogoFilePath}}\" class=\"mat-cell\"\n                    target=\"_blank\" style=\"color: #a08820;\">View</a></div>\n                <div class=\"mat-cell text-center\">\n                    <ng-container *ngIf=\"listing.isGlobal; else noApproval\">{{'Yes'}}</ng-container>\n                    <ng-template #noApproval>{{'No'}}</ng-template>\n                </div>\n                <div class=\"mat-cell\">{{ listing.startDate | date: 'dd/MM/yyyy' }}</div>\n                <div class=\"mat-cell\">{{ listing.endDate | date: 'dd/MM/yyyy' }}</div>\n                <div class=\"mat-cell\">{{listing.finalPrice}}</div>\n                <div class=\"mat-cell text-center\">{{listing.position}}</div>\n                <div class=\"mat-cell text-center\">\n                    <button [routerLink]=\"['../addeditlisting',listing.listingId]\" mat-mini-fab color=\"primary\" matTooltip=\"Edit\">\n                        <i class=\"fa fa-pencil\" aria-hidden=\"true\"></i>\n                    </button>\n                    <button [disabled]=\"listing.roleId==4\" [ngClass]=\"{'disabled': listing.roleId==4}\"\n                        (click)=\"deleteservice(listing);\" mat-mini-fab color=\"warn\" matTooltip=\"Delete\" class=\"mx-1\">\n                        <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                    </button>\n                    \n                </div>\n            </div>\n        </div>\n\n        <mat-divider></mat-divider>\n\n        <div *ngIf=\"ListingList.length > 0\" fxLayout=\"row wrap\">\n            <div fxFlex=\"100\" class=\"p-1\">\n                <mat-card class=\"p-0 text-center nobxshbrd\">\n                    <pagination-controls class=\"product-pagination\" autoHide=\"true\" maxSize=\"5\" (pageChange)=\"onPageChanged($event)\">\n                    </pagination-controls>\n                </mat-card>\n            </div>\n        </div>\n    </mat-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../../shared/shared.module';\nimport { ListadvertisecontentComponent } from './listadvertisecontent/listadvertisecontent.component';\nimport { AddeditadvertisecontentComponent } from './addeditadvertisecontent/addeditadvertisecontent.component';\nimport { ListadvertiseaddsonComponent } from './listadvertiseaddson/listadvertiseaddson.component';\nimport { ListlistingComponent } from './listlisting/listlisting.component';\nimport { AddeditlistingComponent } from './addeditlisting/addeditlisting.component';\nimport { AddeditadvertiseaddsonComponent } from './addeditadvertiseaddson/addeditadvertiseaddson.component';\nimport { StartingpageComponent } from './startingpage/startingpage.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DatePipe } from '@angular/common';\nimport { AuthGuard } from 'src/auth.guard';\n\nexport const routes = [\n  { path: '', redirectTo: 'salespersonadmin', pathMatch: 'full' },\n  { path: 'startingpage', component: StartingpageComponent ,canActivate: [AuthGuard], allowedRoles: [3]},\n  { path: 'listadvertisecontent', component: ListadvertisecontentComponent ,canActivate: [AuthGuard], allowedRoles: [3]},\n  { path: 'listadvertiseaddson', component: ListadvertiseaddsonComponent ,canActivate: [AuthGuard], allowedRoles: [3]},\n  { path: 'addeditadvertisecontent', component: AddeditadvertisecontentComponent ,canActivate: [AuthGuard], allowedRoles: [3]},\n  { path: 'addeditadvertisecontent/:id', component: AddeditadvertisecontentComponent ,canActivate: [AuthGuard], allowedRoles: [3]},\n  { path: 'addeditadvertiseaddson', component: AddeditadvertiseaddsonComponent ,canActivate: [AuthGuard], allowedRoles: [3]},\n  { path: 'addeditadvertiseaddson/:id', component: AddeditadvertiseaddsonComponent ,canActivate: [AuthGuard], allowedRoles: [3]},\n  { path: 'dashboard', component: DashboardComponent ,canActivate: [AuthGuard], allowedRoles: [3]},\n  { path: 'listlisting', component: ListlistingComponent ,canActivate: [AuthGuard], allowedRoles: [3]},\n  { path: 'addeditlisting', component: AddeditlistingComponent ,canActivate: [AuthGuard], allowedRoles: [3]},\n  { path: 'addeditlisting/:id', component: AddeditlistingComponent ,canActivate: [AuthGuard], allowedRoles: [3]},\n];\n\n@NgModule({\n\n  declarations: [\n    ListadvertisecontentComponent,\n    AddeditadvertisecontentComponent,\n    ListadvertiseaddsonComponent,\n    AddeditadvertiseaddsonComponent,\n    StartingpageComponent,\n    ListlistingComponent,\n    AddeditlistingComponent,\n    DashboardComponent\n  ],\n\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    SharedModule,\n    NgxPaginationModule,\n    FormsModule,\n    MatDatepickerModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n\n  providers: [DatePipe]\n  \n})\nexport class SalespersonadminModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from 'src/app/services/token-storage.service';\nimport { FormBuilder } from '@angular/forms';\nimport { AppService } from 'src/app/app.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { AuthenticationService } from 'src/app/shared/services/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-startingpage',\n  templateUrl: './startingpage.component.html',\n  styleUrls: ['./startingpage.component.css']\n})\n\nexport class StartingpageComponent implements OnInit {\n  public PlayerList: any = [];\n  playerId: string | any;\n  sessionuserId: any;\n\n  constructor(public authservise: AuthenticationService, public sessionStorage: TokenStorageService, public appService: AppService,\n    public snackBar: MatSnackBar, public formBuilder: FormBuilder,private router : Router) { }\n\n  ngOnInit(): void {\n    this.sessionuserId = this.sessionStorage.getUser().userId;\n    this.getGetAllPlayerList(this.sessionuserId);\n  }\n\n  ///getGetAllPlayerList\n  public getGetAllPlayerList(sessionuserId) {\n    this.appService.getPlayerById(\"api/UserPlayer/GetPlayerByUserId/\", sessionuserId).subscribe(data => {\n      this.PlayerList = data;\n      this.playerId = this.PlayerList\n    });\n  }\n\n\n///methodforgetplayeridfordashboard\n  logPlayerId(playerId: string) {\n    sessionStorage.setItem(\"playerId\", playerId); // Store playerId in sessionStorage\n    this.router.navigate(['/admin/salespersonadmin/dashboard'], { queryParams: { playerId: playerId } });\n  }\n}\n","<div fxLayout=\"row wrap\" #resizedDiv>\n    <div *ngFor=\"let player of PlayerList\" fxFlex=\"100\" fxFlex.gt-sm=\"20\" fxFlex.sm=\"50\" class=\"p-11 \">\n        <mat-card class=\"p-0 Divbg2s\" [routerLink]=\"['/admin/salespersonadmin/dashboard']\"\n            (click)=\"logPlayerId(player.playerId)\">\n\n            <div class=\"flip-card\">\n                <div class=\"flip-card-inner\">\n                    <div class=\"flip-card-front\">\n                        <div class=\"p-1 text-center\">\n                            <img class=\"w-full h-full rounded-full ng-star-inserted imgs\" width=\"200\" height=\"85\"\n                                [src]=\"player.profileImageFilePath\">\n                        </div>\n                        <div class=\"p-0\">\n                            <p class=\"text-center fliphs\">{{player.fullName}}</p>\n                        </div>\n                    </div>\n                    <div class=\"flip-card-back\">\n                        <div class=\"p-1 text-center\">\n                            <h2 class=\"fliph\">{{player.fullName}}</h2>\n                            <table class=\"w100\">\n                                <tr>\n                                    <td><b>Sport</b></td>\n                                    <td>:</td>\n                                    <td>{{player.sportName}}</td>\n                                </tr>\n                                <tr>\n                                    <td><b>Born</b></td>\n                                    <td>:</td>\n                                    <td>{{player.dob |  date:'dd/MMM/yyyy'}}</td>\n                                </tr>\n                                <tr>\n                                    <td><b>Rank</b></td>\n                                    <td>:</td>\n                                    <td>Data 3</td>\n                                </tr>\n                                <tr>\n                                    <td><b>Debut</b></td>\n                                    <td>:</td>\n                                    <td>Data 4</td>\n                                </tr>\n                                <tr>\n                                    <td><b>Titles</b></td>\n                                    <td>:</td>\n                                    <td>Data 5</td>\n                                </tr>\n                            </table>\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n\n        </mat-card>\n    </div>\n</div>"],"names":[],"sourceRoot":"webpack:///"}