{"version":3,"file":"src_app_loginpages_loginpages_module_ts.js","mappings":"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","sources":["./src/app/loginpages/forgotpassword/forgotpassword.component.ts","./src/app/loginpages/forgotpassword/forgotpassword.component.html","./src/app/loginpages/login/login.component.ts","./src/app/loginpages/login/login.component.html","./src/app/loginpages/loginpages.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from 'src/app/shared/services/authentication.service';\nimport { emailValidator } from 'src/app/theme/utils/app-validators';\n\n@Component({\n  selector: 'app-forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.css']\n})\n\nexport class ForgotpasswordComponent implements OnInit {\n  loginForm: FormGroup;\n  showError = false;\n  email: any;\n\n  constructor(private _authService: AuthenticationService, public formBuilder: FormBuilder, public _router: Router, public snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n\n    this.loginForm = this.formBuilder.group({\n      'email': ['', Validators.compose([Validators.required, emailValidator])],\n    }, {});\n  }\n\n  // Forgotpassword will send on mail\n  public forgotUser(loginFormValue): void {\n    if (this.loginForm.valid) {\n      this.email = this.loginForm.value.email;\n      this._authService.forgotUser(`api/User/ForgetPassword?email=${loginFormValue.email}`, {}).subscribe(response => {\n        if (response == \"Email not found. Plese check.\") {\n          this.snackBar.open('Email is not registered', '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n        }\n        else {\n          this.snackBar.open(' We have sent password on your email, Please check', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\n          this._router.navigate(['/login']);\n        }\n      },\n        error => {\n          this.snackBar.open('Something went wrong!', '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\n        });\n    }\n  }\n}\n","<mat-card class=\"bgimg\">\n    <div fxLayout=\"row wrap\">\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"33.33\" class=\"p-2\"></div>\n\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"33.33\" class=\"p-4\">\n\n            <div class=\"lgpg pt-4\" fxFlex=\"100\">\n                <i class=\"fa fa-arrow-circle-left\" aria-hidden=\"true\" style=\"font-size: 25px;\" [routerLink]=\"['/login']\"\n                    matTooltip=\"Back To Login\"></i>\n                <h2 class=\"text-muted text-center\">\n                    <img src=\"assets/lg.png\" style=\" width: 200px;\" class=\"img1\" alt=\"cinque terre\"> <sup\n                        style=\"font-size: 13px;\"></sup>\n                </h2>\n                <h2 class=\"text-muted text-center\" style=\"color:#7c6100 !important\">FORGOT PASSWORD ?</h2>\n\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"forgotUser(loginForm.value)\" fxLayout=\"row wrap\">\n                    <mat-form-field appearance=\"outline\" class=\"w-100 mt-2\">\n                        <mat-label>Email</mat-label>\n                        <input matInput placeholder=\"Email\" formControlName=\"email\" required>\n                        <mat-error *ngIf=\"loginForm.controls.email.errors?.required\">Email is required</mat-error>\n                        <mat-error *ngIf=\"loginForm.controls.email.hasError('invalidEmail')\">Please enter valid email\n                            address\n                        </mat-error>\n                    </mat-form-field>\n\n                    <div class=\"text-center mt-2\" fxFlex=\"100\">\n                        <button style=\"background-color: #d58408;\" mat-raised-button color=\"primary\" class=\"submit\">\n                            <mat-label>CONTINUE</mat-label>\n                        </button>\n                    </div>\n\n                </form>\n\n                <br />\n            </div>\n\n        </div>\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"33.33\" class=\"p-2\"></div>\n    </div>\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router, ActivatedRoute, Data } from '@angular/router';\r\nimport { UserForAuthenticationDto } from 'src/app/interfaces/user/UserForAuthenticationDto.model';\r\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\r\nimport { AppService } from 'src/app/app.service';\r\nimport { TokenStorageService } from 'src/app/shared/services/token-storage.service';\r\nimport { AuthenticationService } from 'src/app/shared/services/authentication.service';\r\nimport { MatTabChangeEvent, MatTabGroup } from '@angular/material/tabs';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit {\r\n  public loginForm: FormGroup;\r\n  public phoneLoginFrom: FormGroup;\r\n  public errorMessage: string = '';\r\n  public showError: boolean;\r\n  public IsShow: boolean;\r\n  private _returnUrl: string;\r\n  hide = true;\r\n  labelName: string;\r\n  isLoggedIn = false;\r\n  userId: string | any;\r\n  toggle: boolean = true;\r\n  user: any;\r\n  public roleId: Number;\r\n\r\n  constructor(private _authService: AuthenticationService, public appService: AppService, private _router: Router,\r\n    private _route: ActivatedRoute,\r\n    private snackBar: MatSnackBar,\r\n    private tokenStorage: TokenStorageService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    if (this.tokenStorage.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roleId = this.tokenStorage.getUser().roleId;\r\n      this.userId = this.tokenStorage.getUser().userId;\r\n      this._router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n      this._router.onSameUrlNavigation = 'reload';\r\n    }\r\n    this.loginForm = new FormGroup({\r\n      emailId: new FormControl(\"\", [Validators.required]),\r\n      password: new FormControl(\"\", [Validators.required, Validators.minLength(6)])\r\n    })\r\n    this._returnUrl = this._route.snapshot.queryParams['returnUrl'] || '/';\r\n    this.IsShow = true;\r\n  }\r\n\r\n  toggleView(change: MatButtonToggleChange) {\r\n    this.toggle = change.value;\r\n  }\r\n\r\n  public validateControl = (controlName: string) => {\r\n    return this.loginForm.controls[controlName].invalid && this.loginForm.controls[controlName].touched\r\n  }\r\n\r\n  public hasError = (controlName: string, errorName: string) => {\r\n    return this.loginForm.controls[controlName].hasError(errorName)\r\n  }\r\n\r\n  selectedTabValue(changeEvent: MatTabChangeEvent) {\r\n    this.labelName = changeEvent.tab.textLabel;\r\n  }\r\n\r\n  blockSpaces(event: KeyboardEvent) {\r\n    if (event.key === ' ') {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  public loginUser = (loginFormValue) => {\r\n    this.showError = false;\r\n    const login = { ...loginFormValue };\r\n    const userForAuth: UserForAuthenticationDto = {\r\n      emailId: login.emailId,\r\n      password: login.password\r\n    }\r\n\r\n    if (this.loginForm.valid) {\r\n      this._authService.loginUser('api/Login/authenticate', userForAuth)\r\n        .subscribe(res => {\r\n\r\n          this.tokenStorage.saveToken(res.token);\r\n          this.tokenStorage.saveUser(res);\r\n          this.isLoggedIn = true;\r\n          this.roleId = this.tokenStorage.getUser().roleId;\r\n          this.userId = this.tokenStorage.getUser().userId;\r\n\r\n          this._authService.sendAuthStateChangeNotification(res.isAuthSuccessful);\r\n          this._router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n          this._router.onSameUrlNavigation = 'reload';\r\n\r\n          if (this.roleId != undefined) {\r\n\r\n            if (this.roleId == 1) {\r\n              this._router.navigate(['/admin/superadmin/dashboard'], { relativeTo: this._route });\r\n            }\r\n\r\n            else if (this.roleId == 2) {\r\n              this._router.navigate(['/admin/contentadmin/startingpage']);\r\n            }\r\n\r\n            else if (this.roleId == 8) {\r\n              this._router.navigate(['/admin/qualityassurance/startingpage']);\r\n            }\r\n\r\n            else if (this.roleId == 3) {\r\n              this._router.navigate(['/admin/salespersonadmin/startingpage']);\r\n            }\r\n\r\n            else if (this.roleId == 10) {\r\n              this._router.navigate(['/admin/im10salesadmin/dashboard']);\r\n            }\r\n\r\n            else if (this.roleId == 7) {\r\n              this._router.navigate(['/admin/playerrepresentativeadmin/startingpage']);\r\n            }\r\n\r\n            else if (this.roleId == 6) {\r\n              this._router.navigate(['/admin/itsupportadmin/dashboard']);\r\n            }\r\n\r\n            else if (this.roleId == 11) {\r\n              this._router.navigate(['/admin/im10marketingcampaigns/startingpage']);\r\n            }\r\n\r\n            else if (this.roleId == 4) {\r\n              this._router.navigate(['/admin/endorsementmanageradmin/startingpage']);\r\n            }\r\n          }\r\n\r\n          else {\r\n            this._router.navigate(['/login']);\r\n          }\r\n\r\n        },\r\n          (error) => {\r\n            this.snackBar.open('Please enter valid email/password.', '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\r\n          })\r\n    }\r\n\r\n    else {\r\n      this.snackBar.open(\"Please enter valid email/password.\", '×', { panelClass: 'error', verticalPosition: 'top', duration: 3000 });\r\n    }\r\n\r\n  }\r\n}\r\n","<mat-card class=\"bgimg\">\n    <div fxLayout=\"row wrap\">\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"33.33\" class=\"p-2\"></div>\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"33.33\" class=\"pt-1\">\n            <div class=\"lgpg pt-2\" fxFlex=\"100\">\n                <br />\n                <h2 class=\"text-muted text-center\"><img src=\"assets/lg.png\" style=\" width: 200px;\" class=\"img1\"\n                        alt=\"cinque terre\"> <sup style=\"font-size: 13px;\"></sup></h2>\n                <h2 class=\"text-muted text-center\" style=\"color:#7c6100 !important\">LOGIN</h2>\n\n                <form [formGroup]=\"loginForm\" fxLayout=\"row wrap\" (ngSubmit)=\"loginUser(loginForm.value)\">\n\n                    <mat-form-field appearance=\"outline\" class=\"w-100 mt-2\">\n                        <mat-label>Email</mat-label>\n                        <input (keypress)=\"blockSpaces($event)\" autofocus matInput placeholder=\"Email\"\n                            formControlName=\"emailId\" required>\n                        <mat-error *ngIf=\"loginForm.controls.emailId.errors?.required\">Email is\n                            required</mat-error>\n                    </mat-form-field>\n                    <mat-form-field appearance=\"outline\" class=\"w-100 mt-1\">\n                        <mat-label>Password</mat-label>\n                        <input matInput placeholder=\"Password\" [type]=\"hide ? 'password' : 'text'\"\n                            formControlName=\"password\" required>\n                        <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility_off' :\n                            'visibility'}}</mat-icon>\n                        <mat-error *ngIf=\"loginForm.controls.password.errors?.required\">Password is required</mat-error>\n                        <mat-error *ngIf=\"loginForm.controls.password.hasError('minlength')\">Password isn't long enough,\n                            minimum of 6 characters</mat-error>\n                    </mat-form-field>\n\n                    <div class=\"text-center mt-1\" fxFlex=\"100\">\n                        <button style=\"background-color: #d58408\" mat-raised-button color=\"primary\" type=\"submit\">\n                            SUBMIT</button>\n                    </div>\n\n                    <div fxLayout=\"row wrap\" fxFlex=\"100\" class=\" mt-2\">\n\n                        <div fxFlex=\"100\" fxFlex.sm=\"50\" class=\"p-1\">\n                            <div class=\"fpassword text-center\" fxFlex=\"100\">\n                                <a [routerLink]=\"['/forgotpassword']\"\n                                    style=\"color: #7c6100 !important;text-decoration: none;\"> Forgot Password ?</a>\n                            </div>\n                        </div>\n\n                    </div>\n\n                </form>\n\n                <br />\n            </div>\n        </div>\n\n        <div fxFlex=\"100\" fxFlex.gt-sm=\"33.33\" class=\"p-2\"></div>\n    </div>\n</mat-card>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { SwiperModule } from 'ngx-swiper-wrapper';\nimport { InputFileModule } from 'ngx-input-file';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { LoginComponent } from './login/login.component';\nimport { ForgotpasswordComponent } from './forgotpassword/forgotpassword.component';\n\nexport const routes = [ \n  { path: '', redirectTo: 'loginpage', pathMatch: 'full'},\n  { path: 'login', component: LoginComponent, data: { breadcrumb: 'login' } },\n  { path: 'forgotpassword', component: ForgotpasswordComponent, data: { breadcrumb: 'forgot password' } },\n];\n\n@NgModule({\n\n  declarations: [\n    LoginComponent,\n    ForgotpasswordComponent,\n  ],\n\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    SharedModule,\n    NgxPaginationModule,\n    SwiperModule,\n    InputFileModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ]\n  \n})\nexport class LoginpagesModule { }\n"],"names":[],"sourceRoot":"webpack:///"}